bitcoinrpc.h:extern json_spirit::Value importwallet(const json_spirit::Array& params, bool fHelp);
bitcoinrpc.h:extern json_spirit::Value importprivkey(const json_spirit::Array& params, bool fHelp);
key.h:// script supports up to 75 for single byte push
key.h:/** Check that required EC support is available at runtime */
sync.h:/** Wrapped boost mutex: supports recursive locking, but no waiting  */
sync.h:/** Wrapped boost mutex: supports waiting but not recursive locking */
bignum.h:    //CBigNum(char n) is not portable.  Use 'signed char' or 'unsigned char'.
util.h: * This will not support GCC format type warnings (-Wformat) so be careful.
util.h: * Takes time proportional to length
json/LICENSE.txt:included in all copies or substantial portions of the Software.
Binary file sumcoind matches
script.cpp:        // Support up to x-of-3 multisig txns as standard
addrman.cpp:    // check whether we are talking about the exact same CService (including same port)
addrman.cpp:    // check whether we are talking about the exact same CService (including same port)
addrman.cpp:    // check whether we are talking about the exact same CService (including same port)
bitcoinrpc.cpp:static inline unsigned short GetDefaultRPCPort()
bitcoinrpc.cpp:    { "importwallet",           &importwallet,           false,  false },
bitcoinrpc.cpp:    { "importprivkey",          &importprivkey,          false,  false },
bitcoinrpc.cpp:    bool connect(const std::string& server, const std::string& port)
bitcoinrpc.cpp:        ip::tcp::resolver::query query(server.c_str(), port.c_str());
bitcoinrpc.cpp:    // Restrict callers by IP.  It is important to
bitcoinrpc.cpp:    ip::tcp::endpoint endpoint(bindAddress, GetArg("-rpcport", GetDefaultRPCPort()));
bitcoinrpc.cpp:        strerr = strprintf(_("An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s"), endpoint.port(), e.what());
bitcoinrpc.cpp:        strerr = strprintf(_("An error occurred while setting up the RPC port %u for listening on IPv4: %s"), endpoint.port(), e.what());
bitcoinrpc.cpp:               shouldn't have their RPC port exposed.*/
bitcoinrpc.cpp:    if (!d.connect(GetArg("-rpcconnect", "127.0.0.1"), GetArg("-rpcport", itostr(GetDefaultRPCPort()))))
bitcoinrpc.cpp:    _CrtSetReportMode(_CRT_WARN, _CRTDBG_MODE_FILE);
bitcoinrpc.cpp:    _CrtSetReportFile(_CRT_WARN, CreateFile("NUL", GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, 0));
rpcdump.cpp:Value importprivkey(const Array& params, bool fHelp)
rpcdump.cpp:            "importprivkey <sumcoinprivkey> [label]\n"
rpcdump.cpp:        // whenever a key is imported, we need to scan the whole chain
rpcdump.cpp:Value importwallet(const Array& params, bool fHelp)
rpcdump.cpp:            "importwallet <filename>\n"
rpcdump.cpp:            "Imports keys from a wallet dump file (see dumpwallet).");
rpcdump.cpp:            printf("Skipping import of %s (key already present)\n", CBitcoinAddress(keyid).ToString().c_str());
rpcdump.cpp:        printf("Importing %s...\n", CBitcoinAddress(keyid).ToString().c_str());
Binary file leveldb/libleveldb.a matches
Binary file leveldb/libmemenv.a matches
leveldb/util/env_posix.cc:#include "port/port.h"
leveldb/util/env_posix.cc:  port::Mutex mu_;
leveldb/util/env_posix.cc:  port::AtomicPointer allowed_;
leveldb/util/env_posix.cc:  port::Mutex mu_;
Binary file leveldb/util/env_posix.o matches
Binary file leveldb/util/cache.o matches
leveldb/util/histogram.cc:#include "port/port.h"
Binary file leveldb/util/comparator.o matches
leveldb/util/crc32c.cc:// A portable implementation of crc32c, optimized to handle
leveldb/util/cache.cc:#include "port/port.h"
leveldb/util/cache.cc:// of porting hacks and is also faster than some of the built-in hash
leveldb/util/cache.cc:  port::Mutex mutex_;
leveldb/util/cache.cc:  port::Mutex id_mutex_;
leveldb/util/coding.cc:  if (port::kLittleEndian) {
leveldb/util/coding.cc:  if (port::kLittleEndian) {
leveldb/util/hash.cc:// This one is a fallback version for unsupported compilers.
leveldb/util/logging.h:#include "port/port.h"
leveldb/util/env_test.cc:#include "port/port.h"
leveldb/util/env_test.cc:  port::Mutex mu_;
leveldb/util/env_test.cc:  reinterpret_cast<port::AtomicPointer*>(ptr)->NoBarrier_Store(ptr);
leveldb/util/env_test.cc:  port::AtomicPointer called (NULL);
leveldb/util/env_test.cc:  port::AtomicPointer last_id (NULL);
leveldb/util/env_test.cc:    port::AtomicPointer* last_id_ptr;   // Pointer to shared slot
leveldb/util/env_test.cc:    CB(port::AtomicPointer* p, int i) : last_id_ptr(p), id(i) { }
leveldb/util/env_test.cc:  port::Mutex mu;
leveldb/util/env_win.cc:// http://code.google.com/p/leveldbwin/source/browse/trunk/win32_impl_src/port_win32.cc
leveldb/util/env_win.cc:#include "port/port.h"
leveldb/util/env_win.cc:static port::OnceType once = LEVELDB_ONCE_INIT;
leveldb/util/env_win.cc:  port::InitOnce(&once, InitDefaultEnv);
leveldb/util/comparator.cc:#include "port/port.h"
leveldb/util/comparator.cc:static port::OnceType once = LEVELDB_ONCE_INIT;
leveldb/util/comparator.cc:  port::InitOnce(&once, InitModule);
leveldb/util/status.cc:#include "port/port.h"
leveldb/util/status.cc:      case kNotSupported:
leveldb/util/mutexlock.h:#include "port/port.h"
leveldb/util/mutexlock.h:#include "port/thread_annotations.h"
leveldb/util/mutexlock.h:  explicit MutexLock(port::Mutex *mu) EXCLUSIVE_LOCK_FUNCTION(mu)
leveldb/util/mutexlock.h:  port::Mutex *const mu_;
leveldb/util/coding.h:// * In addition we support variable length "varint" encoding
leveldb/util/coding.h:#include "port/port.h"
leveldb/util/coding.h:  if (port::kLittleEndian) {
leveldb/util/coding.h:  if (port::kLittleEndian) {
leveldb/build_detect_platform:#   PLATFORM_SHARED_VERSIONED   Set to 'true' if platform supports versioned
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_posix.cc
leveldb/build_detect_platform:        PORT_FILE=port/port_win.cc
leveldb/build_detect_platform:PORTABLE_FILES=`find $DIRS $PRUNE_TEST -o $PRUNE_BENCH -o $PRUNE_TOOL -o -name '*.cc' -print | sort | sed "s,^$PREFIX/,," | tr "\n" " "`
leveldb/build_detect_platform:# The sources consist of the portable files, plus the platform-specific port
leveldb/build_detect_platform:echo "SOURCES=$PORTABLE_FILES $PORT_FILE" >> $OUTPUT
leveldb/build_detect_platform:    # If -std=c++0x works, use <cstdatomic>.  Otherwise use port_posix.h.
leveldb/README:    to report success and various kinds of errors.
leveldb/table/format.cc:#include "port/port.h"
leveldb/table/format.cc:      if (!port::Snappy_GetUncompressedLength(data, n, &ulength)) {
leveldb/table/format.cc:      if (!port::Snappy_Uncompress(data, n, ubuf)) {
leveldb/table/table_test.cc:static bool SnappyCompressionSupported() {
leveldb/table/table_test.cc:  return port::Snappy_Compress(in.data(), in.size(), &out);
leveldb/table/table_test.cc:  if (!SnappyCompressionSupported()) {
leveldb/table/table_builder.cc:  // TODO(postrelease): Support more compression options: zlib?
leveldb/table/table_builder.cc:      if (port::Snappy_Compress(raw.data(), raw.size(), compressed) &&
leveldb/table/table_builder.cc:        // Snappy not supported, or compressed less than 12.5%, so just
leveldb/build_config.mk:SOURCES=db/builder.cc db/c.cc db/dbformat.cc db/db_impl.cc db/db_iter.cc db/filename.cc db/log_reader.cc db/log_writer.cc db/memtable.cc db/repair.cc db/table_cache.cc db/version_edit.cc db/version_set.cc db/write_batch.cc table/block_builder.cc table/block.cc table/filter_block.cc table/format.cc table/iterator.cc table/merger.cc table/table_builder.cc table/table.cc table/two_level_iterator.cc util/arena.cc util/bloom.cc util/cache.cc util/coding.cc util/comparator.cc util/crc32c.cc util/env.cc util/env_posix.cc util/env_win.cc util/filter_policy.cc util/hash.cc util/histogram.cc util/logging.cc util/options.cc util/status.cc  port/port_posix.cc
leveldb/include/leveldb/db.h:  // DB implementations can export properties about their state
leveldb/include/leveldb/db.h:// on a database that contains important information.
leveldb/include/leveldb/status.h:  static Status NotSupported(const Slice& msg, const Slice& msg2 = Slice()) {
leveldb/include/leveldb/status.h:    return Status(kNotSupported, msg, msg2);
leveldb/include/leveldb/status.h:    kNotSupported = 3,
leveldb/include/leveldb/filter_policy.h:// Most people will want to use the builtin bloom filter support (see
leveldb/include/leveldb/write_batch.h:  // Support for iterating over the contents of a batch.
leveldb/include/leveldb/c.h:  Does not support:
leveldb/include/leveldb/c.h:/* Exported types */
Binary file leveldb/helpers/memenv/memenv.o matches
leveldb/helpers/memenv/memenv.cc:#include "port/port.h"
leveldb/helpers/memenv/memenv.cc:  port::Mutex refs_mutex_;
leveldb/helpers/memenv/memenv.cc:  port::Mutex mutex_;
leveldb/port/atomic_pointer.h:#ifndef PORT_ATOMIC_POINTER_H_
leveldb/port/atomic_pointer.h:#define PORT_ATOMIC_POINTER_H_
leveldb/port/atomic_pointer.h:namespace port {
leveldb/port/atomic_pointer.h:}  // namespace port
leveldb/port/atomic_pointer.h:#endif  // PORT_ATOMIC_POINTER_H_
leveldb/port/win/stdint.h:#ifndef STORAGE_LEVELDB_PORT_WIN_STDINT_H_
leveldb/port/win/stdint.h:#define STORAGE_LEVELDB_PORT_WIN_STDINT_H_
leveldb/port/win/stdint.h:#endif  // STORAGE_LEVELDB_PORT_WIN_STDINT_H_
leveldb/port/port_posix.cc:#include "port/port_posix.h"
leveldb/port/port_posix.cc:namespace port {
leveldb/port/port_posix.cc:}  // namespace port
leveldb/port/port_win.cc:// See port_example.h for documentation for the following types/functions.
leveldb/port/port_win.cc:#include "port/port_win.h"
leveldb/port/port_win.cc:namespace port {
leveldb/port/port_example.h:// specific port_<platform>.h file.  Use this file as a reference for
leveldb/port/port_example.h:// how to port this package to a new platform.
leveldb/port/port_example.h:#ifndef STORAGE_LEVELDB_PORT_PORT_EXAMPLE_H_
leveldb/port/port_example.h:#define STORAGE_LEVELDB_PORT_PORT_EXAMPLE_H_
leveldb/port/port_example.h:namespace port {
leveldb/port/port_example.h://      static port::OnceType init_control = LEVELDB_ONCE_INIT;
leveldb/port/port_example.h://      port::InitOnce(&init_control, &Initializer);
leveldb/port/port_example.h:extern void InitOnce(port::OnceType*, void (*initializer)());
leveldb/port/port_example.h:// Returns false if snappy is not supported by this port.
leveldb/port/port_example.h:// If heap profiling is not supported, returns false.
leveldb/port/port_example.h:}  // namespace port
leveldb/port/port_example.h:#endif  // STORAGE_LEVELDB_PORT_PORT_EXAMPLE_H_
leveldb/port/port_win.h:// See port_example.h for documentation for the following types/functions.
leveldb/port/port_win.h:#ifndef STORAGE_LEVELDB_PORT_PORT_WIN_H_
leveldb/port/port_win.h:#define STORAGE_LEVELDB_PORT_PORT_WIN_H_
leveldb/port/port_win.h:namespace port {
leveldb/port/port_win.h:  // we use opaque void * to avoid including windows.h in port_win.h
leveldb/port/port_win.h:extern void InitOnce(port::OnceType*, void (*initializer)());
leveldb/port/port_win.h:#endif  // STORAGE_LEVELDB_PORT_PORT_WIN_H_
leveldb/port/README:Code in the rest of the package includes "port.h" from this directory.
leveldb/port/README:"port.h" in turn includes a platform specific "port_<platform>.h" file
leveldb/port/README:See port_posix.h for an example of what must be provided in a platform
leveldb/port/port_posix.h:// See port_example.h for documentation for the following types/functions.
leveldb/port/port_posix.h:#ifndef STORAGE_LEVELDB_PORT_PORT_POSIX_H_
leveldb/port/port_posix.h:#define STORAGE_LEVELDB_PORT_PORT_POSIX_H_
leveldb/port/port_posix.h:#include "port/atomic_pointer.h"
leveldb/port/port_posix.h:namespace port {
leveldb/port/port_posix.h:} // namespace port
leveldb/port/port_posix.h:#endif  // STORAGE_LEVELDB_PORT_PORT_POSIX_H_
leveldb/port/thread_annotations.h:#ifndef STORAGE_LEVELDB_PORT_THREAD_ANNOTATIONS_H
leveldb/port/thread_annotations.h:#endif  // STORAGE_LEVELDB_PORT_THREAD_ANNOTATIONS_H
leveldb/port/port.h:#ifndef STORAGE_LEVELDB_PORT_PORT_H_
leveldb/port/port.h:#define STORAGE_LEVELDB_PORT_PORT_H_
leveldb/port/port.h:// porting to a new platform, see "port_example.h" for documentation
leveldb/port/port.h:// of what the new port_<platform>.h file must provide.
leveldb/port/port.h:#  include "port/port_posix.h"
leveldb/port/port.h:#  include "port/port_chromium.h"
leveldb/port/port.h:#  include "port/port_win.h"
leveldb/port/port.h:#endif  // STORAGE_LEVELDB_PORT_PORT_H_
Binary file leveldb/port/port_posix.o matches
leveldb/db/log_reader.h:  // Interface for reporting errors.
leveldb/db/log_reader.h:  class Reporter {
leveldb/db/log_reader.h:    virtual ~Reporter();
leveldb/db/log_reader.h:  // If "reporter" is non-NULL, it is notified whenever some data is
leveldb/db/log_reader.h:  // dropped due to a detected corruption.  "*reporter" must remain
leveldb/db/log_reader.h:  Reader(SequentialFile* file, Reporter* reporter, bool checksum,
leveldb/db/log_reader.h:  Reporter* const reporter_;
leveldb/db/log_reader.h:    // * The record has an invalid CRC (ReadPhysicalRecord reports a drop)
leveldb/db/log_reader.h:    // * The record is a 0-length record (No drop is reported)
leveldb/db/log_reader.h:    // * The record is below constructor's initial_offset (No drop is reported)
leveldb/db/log_reader.h:  // Returns true on success. Handles reporting.
leveldb/db/log_reader.h:  // Reports dropped bytes to the reporter.
leveldb/db/log_reader.h:  void ReportCorruption(size_t bytes, const char* reason);
leveldb/db/log_reader.h:  void ReportDrop(size_t bytes, const Status& reason);
leveldb/db/filename_test.cc:#include "port/port.h"
leveldb/db/db_impl.h:#include "port/port.h"
leveldb/db/db_impl.h:#include "port/thread_annotations.h"
leveldb/db/db_impl.h:  port::Mutex mutex_;
leveldb/db/db_impl.h:  port::AtomicPointer shutting_down_;
leveldb/db/db_impl.h:  port::CondVar bg_cv_;          // Signalled when background work finishes
leveldb/db/db_impl.h:  port::AtomicPointer has_imm_;  // So bg thread can detect non-NULL imm_
leveldb/db/filename.h:#include "port/port.h"
leveldb/db/db_test.cc:  port::Mutex mu_;
leveldb/db/db_test.cc:  port::AtomicPointer delay_data_sync_;
leveldb/db/db_test.cc:  port::AtomicPointer data_sync_error_;
leveldb/db/db_test.cc:  port::AtomicPointer no_space_;
leveldb/db/db_test.cc:  port::AtomicPointer non_writable_;
leveldb/db/db_test.cc:  port::AtomicPointer manifest_sync_error_;
leveldb/db/db_test.cc:  port::AtomicPointer manifest_write_error_;
leveldb/db/db_test.cc:    port::AtomicPointer* error_type = (iter == 0)
leveldb/db/db_test.cc:  port::AtomicPointer stop;
leveldb/db/db_test.cc:  port::AtomicPointer counter[kNumThreads];
leveldb/db/db_test.cc:  port::AtomicPointer thread_done[kNumThreads];
leveldb/db/db_test.cc:  port::Mutex mu;
leveldb/db/dbformat.cc:#include "port/port.h"
leveldb/db/dbformat.cc:  // Attempt to shorten the user portion of the key
leveldb/db/log_writer.h:  // crc32c values for all supported record types.  These are
Binary file leveldb/db/version_set.o matches
leveldb/db/corruption_test.cc:      // Corrupt() doesn't work without this sync on windows; stat reports 0 for
leveldb/db/repair.cc:    struct LogReporter : public log::Reader::Reporter {
leveldb/db/repair.cc:    LogReporter reporter;
leveldb/db/repair.cc:    reporter.env = env_;
leveldb/db/repair.cc:    reporter.info_log = options_.info_log;
leveldb/db/repair.cc:    reporter.lognum = log;
leveldb/db/repair.cc:    log::Reader reader(lfile, &reporter, false/*do not checksum*/,
leveldb/db/repair.cc:        reporter.Corruption(
leveldb/db/log_test.cc:  class ReportCollector : public Reader::Reporter {
leveldb/db/log_test.cc:    ReportCollector() : dropped_bytes_(0) { }
leveldb/db/log_test.cc:  ReportCollector report_;
leveldb/db/log_test.cc:              reader_(&source_, &report_, true/*checksum*/,
leveldb/db/log_test.cc:    return report_.dropped_bytes_;
leveldb/db/log_test.cc:  std::string ReportMessage() const {
leveldb/db/log_test.cc:    return report_.message_;
leveldb/db/log_test.cc:    if (report_.message_.find(msg) == std::string::npos) {
leveldb/db/log_test.cc:      return report_.message_;
leveldb/db/log_test.cc:    Reader* offset_reader = new Reader(&source_, &report_, true/*checksum*/,
leveldb/db/log_test.cc:    Reader* offset_reader = new Reader(&source_, &report_, true/*checksum*/,
leveldb/db/log_test.cc:  ASSERT_EQ("", ReportMessage());
leveldb/db/log_test.cc:  ASSERT_EQ("", ReportMessage());
leveldb/db/log_test.cc:  ASSERT_EQ("", ReportMessage());
leveldb/db/log_test.cc:  ASSERT_EQ("", ReportMessage());
leveldb/db/log_test.cc:  ASSERT_EQ("", ReportMessage());
Binary file leveldb/db/repair.o matches
leveldb/db/version_set.h:#include "port/port.h"
leveldb/db/version_set.h:#include "port/thread_annotations.h"
leveldb/db/version_set.h:  // REQUIRES: user portion of internal_key == user_key.
leveldb/db/version_set.h:  Status LogAndApply(VersionEdit* edit, port::Mutex* mu)
leveldb/db/table_cache.h:#include "port/port.h"
leveldb/db/skiplist_test.cc:    port::AtomicPointer generation[K];
leveldb/db/skiplist_test.cc:  port::AtomicPointer quit_flag_;
leveldb/db/skiplist_test.cc:  port::Mutex mu_;
leveldb/db/skiplist_test.cc:  port::CondVar state_cv_;
leveldb/db/dbformat.h:// Returns the user key portion of an internal key.
leveldb/db/dbformat.h:// the user key portion and breaks ties by decreasing sequence number.
leveldb/db/c.cc:  // No-ops since the C binding does not support key shortening methods.
Binary file leveldb/db/log_reader.o matches
leveldb/db/leveldb_main.cc:class CorruptionReporter : public log::Reader::Reporter {
leveldb/db/leveldb_main.cc:  CorruptionReporter reporter;
leveldb/db/leveldb_main.cc:  log::Reader reader(file, &reporter, true, 0);
leveldb/db/db_impl.cc:#include "port/port.h"
leveldb/db/db_impl.cc:  port::CondVar cv;
leveldb/db/db_impl.cc:  explicit Writer(port::Mutex* mu) : cv(mu) { }
leveldb/db/db_impl.cc:  struct LogReporter : public log::Reader::Reporter {
leveldb/db/db_impl.cc:  LogReporter reporter;
leveldb/db/db_impl.cc:  reporter.env = env_;
leveldb/db/db_impl.cc:  reporter.info_log = options_.info_log;
leveldb/db/db_impl.cc:  reporter.fname = fname.c_str();
leveldb/db/db_impl.cc:  reporter.status = (options_.paranoid_checks ? &status : NULL);
leveldb/db/db_impl.cc:  log::Reader reader(file, &reporter, true/*checksum*/,
leveldb/db/db_impl.cc:      reporter.Corruption(
leveldb/db/db_impl.cc:  port::Mutex* mu;
leveldb/db/skiplist.h:#include "port/port.h"
leveldb/db/skiplist.h:  port::AtomicPointer max_height_;   // Height of the entire list
leveldb/db/skiplist.h:  port::AtomicPointer next_[1];
leveldb/db/skiplist.h:      sizeof(Node) + sizeof(port::AtomicPointer) * (height - 1));
leveldb/db/db_bench.cc:#include "port/port.h"
leveldb/db/db_bench.cc://      heapprofile -- Dump a heap profile (if supported by this port)
leveldb/db/db_bench.cc:  int next_report_;
leveldb/db/db_bench.cc:    next_report_ = 100;
leveldb/db/db_bench.cc:    if (done_ >= next_report_) {
leveldb/db/db_bench.cc:      if      (next_report_ < 1000)   next_report_ += 100;
leveldb/db/db_bench.cc:      else if (next_report_ < 5000)   next_report_ += 500;
leveldb/db/db_bench.cc:      else if (next_report_ < 10000)  next_report_ += 1000;
leveldb/db/db_bench.cc:      else if (next_report_ < 50000)  next_report_ += 5000;
leveldb/db/db_bench.cc:      else if (next_report_ < 100000) next_report_ += 10000;
leveldb/db/db_bench.cc:      else if (next_report_ < 500000) next_report_ += 50000;
leveldb/db/db_bench.cc:      else                            next_report_ += 100000;
leveldb/db/db_bench.cc:  void Report(const Slice& name) {
leveldb/db/db_bench.cc:  port::Mutex mu;
leveldb/db/db_bench.cc:  port::CondVar cv;
leveldb/db/db_bench.cc:    if (!port::Snappy_Compress(text, sizeof(text), &compressed)) {
leveldb/db/db_bench.cc:    arg[0].thread->stats.Report(name);
leveldb/db/db_bench.cc:    port::AtomicPointer ap(&dummy);
leveldb/db/db_bench.cc:      ok = port::Snappy_Compress(input.data(), input.size(), &compressed);
leveldb/db/db_bench.cc:    bool ok = port::Snappy_Compress(input.data(), input.size(), &compressed);
leveldb/db/db_bench.cc:      ok =  port::Snappy_Uncompress(compressed.data(), compressed.size(),
leveldb/db/db_bench.cc:    bool ok = port::GetHeapProfile(WriteToFile, file);
leveldb/db/db_bench.cc:      fprintf(stderr, "heap profiling not supported\n");
leveldb/db/db_iter.cc:#include "port/port.h"
leveldb/db/log_reader.cc:Reader::Reporter::~Reporter() {
leveldb/db/log_reader.cc:Reader::Reader(SequentialFile* file, Reporter* reporter, bool checksum,
leveldb/db/log_reader.cc:      reporter_(reporter),
leveldb/db/log_reader.cc:      ReportDrop(block_start_location, skip_status);
leveldb/db/log_reader.cc:            ReportCorruption(scratch->size(), "partial record without end(1)");
leveldb/db/log_reader.cc:            ReportCorruption(scratch->size(), "partial record without end(2)");
leveldb/db/log_reader.cc:          ReportCorruption(fragment.size(),
leveldb/db/log_reader.cc:          ReportCorruption(fragment.size(),
leveldb/db/log_reader.cc:          ReportCorruption(scratch->size(), "error in middle of record");
leveldb/db/log_reader.cc:        ReportCorruption(
leveldb/db/log_reader.cc:void Reader::ReportCorruption(size_t bytes, const char* reason) {
leveldb/db/log_reader.cc:  ReportDrop(bytes, Status::Corruption(reason));
leveldb/db/log_reader.cc:void Reader::ReportDrop(size_t bytes, const Status& reason) {
leveldb/db/log_reader.cc:  if (reporter_ != NULL &&
leveldb/db/log_reader.cc:    reporter_->Corruption(bytes, reason);
leveldb/db/log_reader.cc:          ReportDrop(kBlockSize, status);
leveldb/db/log_reader.cc:        // just report EOF.
leveldb/db/log_reader.cc:        ReportCorruption(drop_size, "bad record length");
leveldb/db/log_reader.cc:      // Don't report a corruption.
leveldb/db/log_reader.cc:      // Skip zero length record without reporting any drops since
leveldb/db/log_reader.cc:        ReportCorruption(drop_size, "checksum mismatch");
leveldb/db/version_set.cc:Status VersionSet::LogAndApply(VersionEdit* edit, port::Mutex* mu) {
leveldb/db/version_set.cc:  struct LogReporter : public log::Reader::Reporter {
leveldb/db/version_set.cc:    LogReporter reporter;
leveldb/db/version_set.cc:    reporter.status = &s;
leveldb/db/version_set.cc:    log::Reader reader(file, &reporter, true/*checksum*/, 0/*initial_offset*/);
Binary file leveldb/db/db_impl.o matches
leveldb/TODO:  probably not that important.
leveldb/doc/impl.html:level, the corresponding key ranges, and other important metadata.
leveldb/doc/bench/db_bench_tree_db.cc:  int next_report_;     // When to report next
leveldb/doc/bench/db_bench_tree_db.cc:    next_report_ = 100;
leveldb/doc/bench/db_bench_tree_db.cc:    if (done_ >= next_report_) {
leveldb/doc/bench/db_bench_tree_db.cc:      if      (next_report_ < 1000)   next_report_ += 100;
leveldb/doc/bench/db_bench_tree_db.cc:      else if (next_report_ < 5000)   next_report_ += 500;
leveldb/doc/bench/db_bench_tree_db.cc:      else if (next_report_ < 10000)  next_report_ += 1000;
leveldb/doc/bench/db_bench_tree_db.cc:      else if (next_report_ < 50000)  next_report_ += 5000;
leveldb/doc/bench/db_bench_tree_db.cc:      else if (next_report_ < 100000) next_report_ += 10000;
leveldb/doc/bench/db_bench_tree_db.cc:      else if (next_report_ < 500000) next_report_ += 50000;
leveldb/doc/bench/db_bench_tree_db.cc:      else                            next_report_ += 100000;
leveldb/doc/bench/db_bench_sqlite3.cc:  int next_report_;     // When to report next
leveldb/doc/bench/db_bench_sqlite3.cc:    next_report_ = 100;
leveldb/doc/bench/db_bench_sqlite3.cc:    if (done_ >= next_report_) {
leveldb/doc/bench/db_bench_sqlite3.cc:      if      (next_report_ < 1000)   next_report_ += 100;
leveldb/doc/bench/db_bench_sqlite3.cc:      else if (next_report_ < 5000)   next_report_ += 500;
leveldb/doc/bench/db_bench_sqlite3.cc:      else if (next_report_ < 10000)  next_report_ += 1000;
leveldb/doc/bench/db_bench_sqlite3.cc:      else if (next_report_ < 50000)  next_report_ += 5000;
leveldb/doc/bench/db_bench_sqlite3.cc:      else if (next_report_ < 100000) next_report_ += 10000;
leveldb/doc/bench/db_bench_sqlite3.cc:      else if (next_report_ < 500000) next_report_ += 50000;
leveldb/doc/bench/db_bench_sqlite3.cc:      else                            next_report_ += 100000;
leveldb/doc/benchmark.html:<p>Benchmarks were all performed on a six-core Intel(R) Xeon(R) CPU X5650 @ 2.67GHz, with 12288 KB of total L3 cache and 12 GB of DDR3 RAM at 1333 MHz. (Note that LevelDB uses at most two CPUs since the benchmarks are single threaded: one to run the benchmark, and one for background compactions.) We ran the benchmarks on two machines (with identical processors), one with an Ext3 file system and one with an Ext4 file system. The machine with the Ext3 file system has a SATA Hitachi HDS721050CLA362 hard drive. The machine with the Ext4 file system has a SATA Samsung HD502HJ hard drive. Both hard drives spin at 7200 RPM and have hard drive write-caching enabled (using `hdparm -W 1 [device]`). The numbers reported below are the median of three measurements.</p>
leveldb/doc/benchmark.html:<p>A batch write is a set of writes that are applied atomically to the underlying database. A single batch of N writes may be significantly faster than N individual writes. The following benchmark writes one thousand batches where each batch contains one thousand 100-byte values. TreeDB does not support batch writes and is omitted from this benchmark.</p>
leveldb/doc/benchmark.html:<p>For this benchmark, we populated a database with 1 million entries consisting of 16 byte keys and 100 byte values. We compiled LevelDB and Kyoto Cabinet without compression support, so results that are read out from the database are already uncompressed. We've listed the SQLite3 baseline read performance as a point of comparison.</p>
leveldb/doc/table_format.txt:supported meta block types are described below.  More meta block types
leveldb/doc/index.html:support reading as of that snapshot.
leveldb/doc/index.html:  it detects an internal corruption.  Depending on which portion of the
leveldb/doc/index.html:<h1>Porting</h1>
leveldb/doc/index.html:<code>leveldb</code> may be ported to a new platform by providing platform
leveldb/doc/index.html:specific implementations of the types/methods/functions exported by
leveldb/doc/index.html:<code>leveldb/port/port.h</code>.  See <code>leveldb/port/port_example.h</code> for more
leveldb/doc/log_format.txt:types they do not understand, others may report that some data was
makefile.osx:# ppc doesn't work because we don't support big-endian
keystore.h:    // Support for BIP 0013 : see https://en.bitcoin.it/wiki/BIP_0013
serialize.h:// i.e. anything that supports .read(char*, int) and .write(char*, int)
serialize.h:// Support for IMPLEMENT_SERIALIZE and READWRITE macro
serialize.h:                // whenever we reach the end, we take the opportunity to clear the buffer
Binary file obj/keystore.o matches
Binary file obj/init.o matches
Binary file obj/protocol.o matches
Binary file obj/bitcoinrpc.o matches
Binary file obj/script.o matches
Binary file obj/walletdb.o matches
Binary file obj/rpcblockchain.o matches
Binary file obj/alert.o matches
Binary file obj/db.o matches
Binary file obj/util.o matches
Binary file obj/txdb-leveldb.o matches
Binary file obj/kernel.o matches
Binary file obj/rpcmining.o matches
Binary file obj/noui.o matches
Binary file obj/wallet.o matches
Binary file obj/zerocoin/CoinSpend.o matches
Binary file obj/zerocoin/ZeroTest.o matches
Binary file obj/zerocoin/Coin.o matches
Binary file obj/zerocoin/ParamGeneration.o matches
Binary file obj/zerocoin/SpendMetaData.o matches
Binary file obj/zerocoin/Params.o matches
Binary file obj/zerocoin/Accumulator.o matches
Binary file obj/zerocoin/SerialNumberSignatureOfKnowledge.o matches
Binary file obj/zerocoin/Commitment.o matches
Binary file obj/zerocoin/AccumulatorProofOfKnowledge.o matches
Binary file obj/crypter.o matches
Binary file obj/net.o matches
Binary file obj/irc.o matches
Binary file obj/rpcnet.o matches
Binary file obj/key.o matches
Binary file obj/addrman.o matches
Binary file obj/main.o matches
Binary file obj/sync.o matches
Binary file obj/rpcdump.o matches
Binary file obj/rpcwallet.o matches
Binary file obj/miner.o matches
Binary file obj/scrypt.o matches
Binary file obj/rpcrawtransaction.o matches
Binary file obj/netbase.o matches
Binary file obj/checkpoints.o matches
net.cpp:void ThreadMapPort2(void* parg);
net.cpp:    int nPort;
net.cpp:unsigned short GetListenPort()
net.cpp:    return (unsigned short)(GetArg("-port", GetDefaultPort()));
net.cpp:                addr = CService((*it).first, (*it).second.nPort);
net.cpp:            info.nPort = addr.GetPort();
net.cpp:    return AddLocal(CService(addr, GetListenPort()), nScore);
net.cpp:    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, GetDefaultPort()) : ConnectSocket(addrConnect, hSocket))
net.cpp:        throw; // support pthread_cancel()
net.cpp:void ThreadMapPort(void* parg)
net.cpp:        ThreadMapPort2(parg);
net.cpp:        PrintException(&e, "ThreadMapPort()");
net.cpp:        PrintException(NULL, "ThreadMapPort()");
net.cpp:    printf("ThreadMapPort exited\n");
net.cpp:void ThreadMapPort2(void* parg)
net.cpp:    printf("ThreadMapPort started\n");
net.cpp:    std::string port = strprintf("%u", GetListenPort());
net.cpp:        r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,
net.cpp:                            port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), "TCP", 0);
net.cpp:        r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,
net.cpp:                            port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), "TCP", 0, "0");
net.cpp:            printf("AddPortMapping(%s, %s, %s) failed with code %d (%s)\n",
net.cpp:                port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));
net.cpp:            printf("UPnP Port Mapping successful.\n");
net.cpp:                r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), "TCP", 0);
net.cpp:                printf("UPNP_DeletePortMapping() returned : %d\n", r);
net.cpp:                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,
net.cpp:                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), "TCP", 0);
net.cpp:                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,
net.cpp:                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), "TCP", 0, "0");
net.cpp:                    printf("AddPortMapping(%s, %s, %s) failed with code %d (%s)\n",
net.cpp:                        port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));
net.cpp:                    printf("UPnP Port Mapping successful.\n");;
net.cpp:void MapPort()
net.cpp:        if (!NewThread(ThreadMapPort, NULL))
net.cpp:            printf("Error: ThreadMapPort(ThreadMapPort) failed\n");
net.cpp:void MapPort()
net.cpp:        throw; // support pthread_cancel()
net.cpp:                        CAddress addr = CAddress(CService(ip, GetDefaultPort()));
net.cpp:                CAddress addr(CService(ip, GetDefaultPort()));
net.cpp:            // do not allow non-default ports, unless after 50 invalid addresses selected already
net.cpp:            if (addr.GetPort() != GetDefaultPort() && nTries < 50)
net.cpp:        if(Lookup(strAddNode.c_str(), vservNode, GetDefaultPort(), fNameLookup, 0))
net.cpp:            FindNode(addrConnect.ToStringIPPort().c_str()))
net.cpp:bool BindListenPort(const CService &addrBind, string& strError)
net.cpp:        strError = strprintf("Error: bind address family for %s not supported", addrBind.ToString().c_str());
net.cpp:    // Allow binding if the port is still in TIME_WAIT state after
net.cpp:    // Map ports with UPnP
net.cpp:        MapPort();
net.cpp:    if (vnThreadsRunning[THREAD_UPNP] > 0) printf("ThreadMapPort still running\n");
netbase.cpp:void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {
netbase.cpp:    // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator
netbase.cpp:                portOut = n;
netbase.cpp:bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions)
netbase.cpp:    int port = portDefault;
netbase.cpp:    SplitHostPort(std::string(pszName), port, hostname);
netbase.cpp:        vAddr[i] = CService(vIP[i], port);
netbase.cpp:bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup)
netbase.cpp:    bool fRet = Lookup(pszName, vService, portDefault, fAllowLookup, 1);
netbase.cpp:bool LookupNumeric(const char *pszName, CService& addr, int portDefault)
netbase.cpp:    return Lookup(pszName, addr, portDefault, false);
netbase.cpp:    memcpy(pszSocks4IP + 2, &addr.sin_port, 2);
netbase.cpp:bool static Socks5(string strDest, int port, SOCKET& hSocket)
netbase.cpp:    strSocks5 += static_cast<char>((port >> 8) & 0xFF);
netbase.cpp:    strSocks5 += static_cast<char>((port >> 0) & 0xFF);
netbase.cpp:            case 0x08: return error("Proxy error: address type not supported");
netbase.cpp:        printf("Cannot connect to %s: unsupported network\n", addrConnect.ToString().c_str());
netbase.cpp:        if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))
netbase.cpp:bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout)
netbase.cpp:    int port = portDefault;
netbase.cpp:    SplitHostPort(string(pszDest), port, strDest);
netbase.cpp:    CService addrResolved(CNetAddr(strDest, fNameLookup && !nameproxy.second), port);
netbase.cpp:            if (!Socks5(strDest, port, hSocket))
netbase.cpp:    port = 0;
netbase.cpp:CService::CService(const CNetAddr& cip, unsigned short portIn) : CNetAddr(cip), port(portIn)
netbase.cpp:CService::CService(const struct in_addr& ipv4Addr, unsigned short portIn) : CNetAddr(ipv4Addr), port(portIn)
netbase.cpp:CService::CService(const struct in6_addr& ipv6Addr, unsigned short portIn) : CNetAddr(ipv6Addr), port(portIn)
netbase.cpp:CService::CService(const struct sockaddr_in& addr) : CNetAddr(addr.sin_addr), port(ntohs(addr.sin_port))
netbase.cpp:CService::CService(const struct sockaddr_in6 &addr) : CNetAddr(addr.sin6_addr), port(ntohs(addr.sin6_port))
netbase.cpp:CService::CService(const char *pszIpPort, bool fAllowLookup)
netbase.cpp:    if (Lookup(pszIpPort, ip, 0, fAllowLookup))
netbase.cpp:CService::CService(const char *pszIpPort, int portDefault, bool fAllowLookup)
netbase.cpp:    if (Lookup(pszIpPort, ip, portDefault, fAllowLookup))
netbase.cpp:CService::CService(const std::string &strIpPort, bool fAllowLookup)
netbase.cpp:    if (Lookup(strIpPort.c_str(), ip, 0, fAllowLookup))
netbase.cpp:CService::CService(const std::string &strIpPort, int portDefault, bool fAllowLookup)
netbase.cpp:    if (Lookup(strIpPort.c_str(), ip, portDefault, fAllowLookup))
netbase.cpp:unsigned short CService::GetPort() const
netbase.cpp:    return port;
netbase.cpp:    return (CNetAddr)a == (CNetAddr)b && a.port == b.port;
netbase.cpp:    return (CNetAddr)a != (CNetAddr)b || a.port != b.port;
netbase.cpp:    return (CNetAddr)a < (CNetAddr)b || ((CNetAddr)a == (CNetAddr)b && a.port < b.port);
netbase.cpp:        paddrin->sin_port = htons(port);
netbase.cpp:        paddrin6->sin6_port = htons(port);
netbase.cpp:     vKey[16] = port / 0x100;
netbase.cpp:     vKey[17] = port & 0x0FF;
netbase.cpp:std::string CService::ToStringPort() const
netbase.cpp:    return strprintf("%u", port);
netbase.cpp:std::string CService::ToStringIPPort() const
netbase.cpp:        return ToStringIP() + ":" + ToStringPort();
netbase.cpp:        return "[" + ToStringIP() + "]:" + ToStringPort();
netbase.cpp:    return ToStringIPPort();
netbase.cpp:void CService::SetPort(unsigned short portIn)
netbase.cpp:    port = portIn;
test/netbase_tests.cpp:bool static TestSplitHost(string test, string host, int port)
test/netbase_tests.cpp:    int portOut = -1;
test/netbase_tests.cpp:    SplitHostPort(test, portOut, hostOut);
test/netbase_tests.cpp:    return hostOut == host && port == portOut;
test/DoS_tests.cpp:    return CService(CNetAddr(s), GetDefaultPort());
test/util_tests.cpp:    // Spaces between bytes must be supported
allocators.h: * small objects that span up to a few pages, mostly smaller than a page. To support large allocations,
zerocoin/ParamGeneration.cpp:	// exception if the securityLevel is too large to be supported
zerocoin/ParamGeneration.cpp:		throw ZerocoinException("Security level not supported.");
zerocoin/ParamGeneration.cpp:		// throw ZerocoinException("Seed is too short to support the required security level.");
rpcwallet.cpp:    obj.push_back(Pair("proxy",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));
rpcwallet.cpp:            "Repair wallet if checkwallet reports any problem.\n");
crypter.h:        // ie slightly lower than the lowest hardware we need bother supporting
wallet.cpp:    bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets
wallet.cpp:            // Don't report 'change' txouts
wallet.cpp:void CWalletTx::AddSupportingTransactions(CTxDB& txdb)
wallet.cpp:                    printf("ERROR: AddSupportingTransactions() : unsupported transaction\n");
wallet.cpp:                //needed to prevent degenerate behavior and it is important
wallet.cpp:                wtxNew.AddSupportingTransactions(txdb);
wallet.cpp:                        printf("CreateCoinStake : no support for kernel type=%d\n", whichType);
wallet.cpp:                    break;  // only support pay to public key and pay to address
makefile.unix:    # Make some important things such as the global offset table read only as soon as
makefile.bsd:    # Make some important things such as the global offset table read only as soon as
version.cpp:// Name of client reported in the 'version' message. Report the same name
version.cpp:// * secondly, if this is an exported version of the code, GIT_ARCHIVE will
version.cpp://   be defined (automatically using the export-subst git attribute), and
init.cpp:    if (!BindListenPort(addr, strError)) {
init.cpp:        "  -proxy=<ip:port>       " + _("Connect through socks proxy") + "\n" +
init.cpp:        "  -tor=<ip:port>         " + _("Use proxy to reach tor hidden services (default: same as -proxy)") + "\n"
init.cpp:        "  -port=<port>           " + _("Listen for connections on <port> (default: 13800 or testnet: 23800)") + "\n" +
init.cpp:        "  -bind=<addr>           " + _("Bind to given address. Use [host]:port notation for IPv6") + "\n" +
init.cpp:        "  -staking               " + _("Stake your coins to support network and gain reward (default: 1)") + "\n" +
init.cpp:        "  -upnp                  " + _("Use UPnP to map the listening port (default: 1 when listening)") + "\n" +
init.cpp:        "  -upnp                  " + _("Use UPnP to map the listening port (default: 0)") + "\n" +
init.cpp:        "  -rpcport=<port>        " + _("Listen for JSON-RPC connections on <port> (default: 13801 or testnet: 23801)") + "\n" +
init.cpp:        "  -loadblock=<file>      " + _("Imports blocks from external blk000?.dat file") + "\n" +
init.cpp: *  necessary library support.
init.cpp:        InitError("OpenSSL appears to lack support for elliptic curve cryptography. For more "
init.cpp:    _CrtSetReportMode(_CRT_WARN, _CRTDBG_MODE_FILE);
init.cpp:    _CrtSetReportFile(_CRT_WARN, CreateFileA("NUL", GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, 0));
init.cpp:    _set_abort_behavior(0, _WRITE_ABORT_MSG | _CALL_REPORTFAULT);
init.cpp:    // Minimum supported OS versions: WinXP SP3, WinVista >= SP1, Win Server 2008
init.cpp:        // do not map ports or try to retrieve public IP when not listening (pointless)
init.cpp:                if (!Lookup(strBind.c_str(), addrBind, GetListenPort(), false))
init.cpp:                fBound |= Bind(CService(in6addr_any, GetListenPort()), false);
init.cpp:                fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound);
init.cpp:            return InitError(_("Failed to listen on any port. Use -listen=0 if you want this."));
init.cpp:            CService addrLocal(strAddr, GetListenPort(), fNameLookup);
init.cpp:            AddLocal(CService(strAddr, GetListenPort(), fNameLookup), LOCAL_MANUAL);
init.cpp:    // ********************************************************* Step 9: import blocks
init.cpp:        uiInterface.InitMessage(_("Importing blockchain data file."));
init.cpp:        uiInterface.InitMessage(_("Importing bootstrap blockchain data file."));
util.cpp:// Init OpenSSL library multithreading support
util.cpp:        // Init OpenSSL library multithreading support
util.cpp:        // Shutdown OpenSSL library multithreading support
util.cpp:    // Mac: ~/Library/Application Support/SUMCOIN
util.cpp:    pathRet /= "Library/Application Support";
util.cpp:    const char* nodes =  "\nrpcport=13801"
util.cpp:                         "\nport=13800"
util.cpp:// This is XCode 10.6-and-later; bring back if we drop 10.5 support:
addrman.h:        // This format is more complex, but significantly smaller (at most 1.5 MiB), and supports
addrman.h:            printf("Added %s from %s: %i tried, %i new\n", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);
main.cpp:        // Add previous supporting transactions first
main.cpp:        // record my external IP reported by peer
protocol.h:static inline unsigned short GetDefaultPort(const bool testnet = fTestNet)
kernel.cpp:// this ensures that the chance of getting a coinstake is proportional to the
netbase.h:#undef SetPort
netbase.h:/** A combination of a network address (CNetAddr) and a (TCP) port */
netbase.h:        unsigned short port; // host order
netbase.h:        CService(const CNetAddr& ip, unsigned short port);
netbase.h:        CService(const struct in_addr& ipv4Addr, unsigned short port);
netbase.h:        explicit CService(const char *pszIpPort, int portDefault, bool fAllowLookup = false);
netbase.h:        explicit CService(const char *pszIpPort, bool fAllowLookup = false);
netbase.h:        explicit CService(const std::string& strIpPort, int portDefault, bool fAllowLookup = false);
netbase.h:        explicit CService(const std::string& strIpPort, bool fAllowLookup = false);
netbase.h:        void SetPort(unsigned short portIn);
netbase.h:        unsigned short GetPort() const;
netbase.h:        std::string ToStringPort() const;
netbase.h:        std::string ToStringIPPort() const;
netbase.h:        CService(const struct in6_addr& ipv6Addr, unsigned short port);
netbase.h:             unsigned short portN = htons(port);
netbase.h:             READWRITE(portN);
netbase.h:                 pthis->port = ntohs(portN);
netbase.h:void SplitHostPort(std::string in, int &portOut, std::string &hostOut);
netbase.h:bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);
netbase.h:bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);
netbase.h:bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);
netbase.h:bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault = 0, int nTimeout = nConnectTimeout);
irc.cpp:    short port;
irc.cpp:        tmp.port = htons(addr.GetPort());
irc.cpp:    addr = CService(tmp.ip, ntohs(tmp.port));
qt/sendcoinsdialog.h:    /** Set up the tab chain manually, as Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907).
qt/addressbookpage.h:    void exportClicked();
qt/forms/optionsdialog.ui:        <widget class="QCheckBox" name="mapPortUpnp">
qt/forms/optionsdialog.ui:          <string>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</string>
qt/forms/optionsdialog.ui:          <string>Map port using &amp;UPnP</string>
qt/forms/optionsdialog.ui:          <widget class="QLabel" name="proxyPortLabel">
qt/forms/optionsdialog.ui:            <string>&amp;Port:</string>
qt/forms/optionsdialog.ui:            <cstring>proxyPort</cstring>
qt/forms/optionsdialog.ui:          <widget class="QLineEdit" name="proxyPort">
qt/forms/optionsdialog.ui:            <string>Port of the proxy (e.g. 9050)</string>
qt/csvmodelwriter.h:/** Export a Qt table model to a CSV file. This is useful for analyzing or post-processing the data in
qt/csvmodelwriter.h:    /** Perform export of the model to CSV.
qt/transactionview.cpp:void TransactionView::exportClicked()
qt/transactionview.cpp:    // CSV is currently the only supported format
qt/transactionview.cpp:            tr("Export Transaction Data"), QString(),
qt/transactionview.cpp:        QMessageBox::critical(this, tr("Error exporting"), tr("Could not write to file %1.").arg(filename),
qt/sendcoinsentry.h:    /** Set up the tab chain manually, as Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907).
qt/bitcoinamountfield.h:    /** Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907),
qt/askpassphrasedialog.cpp:                                         tr("IMPORTANT: Any previous backups you have made of your wallet file "
qt/bitcoingui.cpp:    exportAction = new QAction(QIcon(":/icons/export"), tr("&Export..."), this);
qt/bitcoingui.cpp:    exportAction->setToolTip(tr("Export the data in the current tab to a file"));
qt/bitcoingui.cpp:    file->addAction(exportAction);
qt/bitcoingui.cpp:    toolbar2->addAction(exportAction);
qt/bitcoingui.cpp:        // Report errors from network/worker thread
qt/bitcoingui.cpp:        // Report errors from wallet thread
qt/bitcoingui.cpp:    // Report errors from network/worker thread
qt/bitcoingui.cpp:          "which goes to the nodes that process your transaction and helps to support the network.  "
qt/bitcoingui.cpp:    exportAction->setEnabled(false);
qt/bitcoingui.cpp:    disconnect(exportAction, SIGNAL(triggered()), 0, 0);
qt/bitcoingui.cpp:    exportAction->setEnabled(true);
qt/bitcoingui.cpp:    disconnect(exportAction, SIGNAL(triggered()), 0, 0);
qt/bitcoingui.cpp:    connect(exportAction, SIGNAL(triggered()), transactionView, SLOT(exportClicked()));
qt/bitcoingui.cpp:    exportAction->setEnabled(true);
qt/bitcoingui.cpp:    disconnect(exportAction, SIGNAL(triggered()), 0, 0);
qt/bitcoingui.cpp:    connect(exportAction, SIGNAL(triggered()), addressBookPage, SLOT(exportClicked()));
qt/bitcoingui.cpp:    exportAction->setEnabled(true);
qt/bitcoingui.cpp:    disconnect(exportAction, SIGNAL(triggered()), 0, 0);
qt/bitcoingui.cpp:    connect(exportAction, SIGNAL(triggered()), receiveCoinsPage, SLOT(exportClicked()));
qt/bitcoingui.cpp:    exportAction->setEnabled(false);
qt/bitcoingui.cpp:    disconnect(exportAction, SIGNAL(triggered()), 0, 0);
qt/bitcoingui.cpp:        encryptWalletAction->setEnabled(false); // TODO: decrypt currently not supported
qt/bitcoingui.cpp:        encryptWalletAction->setEnabled(false); // TODO: decrypt currently not supported
qt/transactionrecord.h:    /** @name Reported status
qt/notificator.cpp:    if(trayicon && trayicon->supportsMessages())
qt/walletmodel.cpp:        // Decrypt -- TODO; not supported yet
qt/res/src/questionmark.svg:   inkscape:export-filename="/store/orion/projects/bitcoin/questionmark.png"
qt/res/src/questionmark.svg:   inkscape:export-xdpi="90"
qt/res/src/questionmark.svg:   inkscape:export-ydpi="90">
qt/res/src/inout.svg:   inkscape:export-filename="/home/orion/projects2/bitcoin/tx_mined.png"
qt/res/src/inout.svg:   inkscape:export-xdpi="12"
qt/res/src/inout.svg:   inkscape:export-ydpi="12"
qt/res/src/bitcoin.svg:   inkscape:export-filename="/store/orion/projects/bitcoin/BC_Logo_icon32.png"
qt/res/src/bitcoin.svg:   inkscape:export-xdpi="11.25"
qt/res/src/bitcoin.svg:   inkscape:export-ydpi="11.25"
qt/res/src/bitcoin.svg:       inkscape:export-xdpi="11.98"
qt/res/src/bitcoin.svg:       inkscape:export-ydpi="11.98" />
qt/optionsmodel.cpp:        case MapPortUPnP:
qt/optionsmodel.cpp:        case ProxyPort: {
qt/optionsmodel.cpp:                return QVariant(proxy.first.GetPort());
qt/optionsmodel.cpp:        case MapPortUPnP:
qt/optionsmodel.cpp:            MapPort();
qt/optionsmodel.cpp:            settings.setValue("addrProxy", proxy.first.ToStringIPPort().c_str());
qt/optionsmodel.cpp:        case ProxyPort: {
qt/optionsmodel.cpp:            proxy.first.SetPort(value.toInt());
qt/optionsmodel.cpp:            settings.setValue("addrProxy", proxy.first.ToStringIPPort().c_str());
qt/qrcodedialog.cpp:        myImage.scaled(EXPORT_IMAGE_SIZE, EXPORT_IMAGE_SIZE).save(fn);
qt/optionsmodel.h:        MapPortUPnP,       // bool
qt/optionsmodel.h:        ProxyPort,         // int
qt/transactionview.h:    Using the filter row, the user can view or export a subset of the transactions.
qt/transactionview.h:    void exportClicked();
qt/rpcconsole.cpp:    ui->openDebugLogfileButton->setIcon(QIcon(":/icons/export"));
qt/optionsdialog.cpp:    ui->mapPortUpnp->setEnabled(false);
qt/optionsdialog.cpp:    ui->proxyPort->setEnabled(false);
qt/optionsdialog.cpp:    ui->proxyPort->setValidator(new QIntValidator(1, 65535, this));
qt/optionsdialog.cpp:    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyPort, SLOT(setEnabled(bool)));
qt/optionsdialog.cpp:    mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);
qt/optionsdialog.cpp:    mapper->addMapping(ui->proxyPort, OptionsModel::ProxyPort);
qt/bitcoingui.h:    QAction *exportAction;
qt/bitcoingui.h:       https://bugreports.qt-project.org/browse/QTBUG-10440
qt/bitcoin.qrc:        <file alias="export">res/icons/export.png</file>
qt/addressbookpage.cpp:void AddressBookPage::exportClicked()
qt/addressbookpage.cpp:    // CSV is currently the only supported format
qt/addressbookpage.cpp:            tr("Export Address Book Data"), QString(),
qt/addressbookpage.cpp:        QMessageBox::critical(this, tr("Error exporting"), tr("Could not write to file %1.").arg(filename),
qt/bitcoinstrings.cpp:"An error occurred while setting up the RPC port %u for listening on IPv6, "
qt/bitcoinstrings.cpp:"An error occurred while setting up the RPC port %u for listening on IPv4: %s"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Listen for connections on <port> (default: 13800 or testnet: 23800)"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Bind to given address. Use [host]:port notation for IPv6"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Stake your coins to support network and gain reward (default: 1)"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Use UPnP to map the listening port (default: 1 when listening)"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Use UPnP to map the listening port (default: 0)"),
qt/bitcoinstrings.cpp:"Listen for JSON-RPC connections on <port> (default: 13801 or testnet: 23801)"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Imports blocks from external blk000?.dat file"),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Failed to listen on any port. Use -listen=0 if you want this."),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Importing blockchain data file."),
qt/bitcoinstrings.cpp:QT_TRANSLATE_NOOP("bitcoin-core", "Importing bootstrap blockchain data file."),
qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qcncodecs)
qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qjpcodecs)
qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qtwcodecs)
qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qkrcodecs)
qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qtaccessiblewidgets)
Binary file qt/locale/bitcoin_fa.qm matches
qt/locale/bitcoin_sl_SI.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sl_SI.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sl_SI.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sl_SI.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sl_SI.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sl_SI.ts:        <translation>Sprejmi povezave na &lt;port&gt; (privzeta vrata: 13800 ali testnet: 23800) </translation>
qt/locale/bitcoin_sl_SI.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sl_SI.ts:        <translation>Naveži na dani naslov. Uporabi [host]:port ukaz za IPv6</translation>
qt/locale/bitcoin_sl_SI.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sl_SI.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sl_SI.ts:        <translation>Prišlo je do napake pri nastavljanju RPC porta %u za vhodne povezave na IPv4: %s</translation>
qt/locale/bitcoin_sl_SI.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sl_SI.ts:        <translation>Sprejmi povezave na &lt;port&gt; (privzeta vrata: 13800 ali testnet: 23800) </translation>
qt/locale/bitcoin_sl_SI.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sl_SI.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sl_SI.ts:        <translation>Prišlo je do napake pri nastavljanju RPC porta %u za vhodne povezave na IPv6: %s</translation>
qt/locale/bitcoin_sl_SI.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sl_SI.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_lt.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_lt.ts:        <source>Error exporting</source>
qt/locale/bitcoin_lt.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_lt.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_lt.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_lt.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_lt.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_lt.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_lt.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_lt.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_lt.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_lt.ts:        <source>Error exporting</source>
qt/locale/bitcoin_lt.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_lt.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_lt.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_lt.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_lt.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_lt.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_lt.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_lt.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_lt.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_lt.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_lt.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_lt.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_it.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_it.ts:        <source>Error exporting</source>
qt/locale/bitcoin_it.ts:        <translation>Inserisci la passphrase per il portamonete.&lt;br/&gt;Per piacere usare unapassphrase di &lt;b&gt;10 o più caratteri casuali&lt;/b&gt;, o &lt;b&gt;otto o più parole&lt;/b&gt;.</translation>
qt/locale/bitcoin_it.ts:        <translation>Cifra il portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Quest&apos;operazione necessita della passphrase per sbloccare il portamonete.</translation>
qt/locale/bitcoin_it.ts:        <translation>Sblocca il portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Quest&apos;operazione necessita della passphrase per decifrare il portamonete,</translation>
qt/locale/bitcoin_it.ts:        <translation>Decifra il portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Inserisci la vecchia e la nuova passphrase per il portamonete.</translation>
qt/locale/bitcoin_it.ts:        <translation>Conferma la cifratura del portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Si è sicuri di voler cifrare il portamonete?</translation>
qt/locale/bitcoin_it.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_it.ts:        <translation>IMPORTANTE: qualsiasi backup del portafoglio effettuato precedentemente dovrebbe essere sostituito con il file del portafoglio criptato appena generato. Per ragioni di sicurezza, i backup precedenti del file del portafoglio non criptato diventeranno inservibili non appena si inizi ad usare il nuovo portafoglio criptato.</translation>
qt/locale/bitcoin_it.ts:        <translation>Portamonete cifrato</translation>
qt/locale/bitcoin_it.ts:        <translation>Cifratura del portamonete fallita</translation>
qt/locale/bitcoin_it.ts:        <translation>Cifratura del portamonete fallita a causa di un errore interno. Il portamonete non è stato cifrato.</translation>
qt/locale/bitcoin_it.ts:        <translation>Sblocco del portamonete fallito</translation>
qt/locale/bitcoin_it.ts:        <translation>La passphrase inserita per la decifrazione del portamonete è errata.</translation>
qt/locale/bitcoin_it.ts:        <translation>Decifrazione del portamonete fallita</translation>
qt/locale/bitcoin_it.ts:        <translation>Passphrase del portamonete modificata con successo.</translation>
qt/locale/bitcoin_it.ts:        <translation>Mostra lo stato generale del portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>&amp;Cifra il portamonete...</translation>
qt/locale/bitcoin_it.ts:        <translation>&amp;Backup Portamonete...</translation>
qt/locale/bitcoin_it.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_it.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_it.ts:        <translation>Backup portamonete in un&apos;altra locazione</translation>
qt/locale/bitcoin_it.ts:        <translation>Cambia la passphrase per la cifratura del portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Portamonete</translation>
qt/locale/bitcoin_it.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_it.ts:        <translation>Il portamonete è &lt;b&gt;cifrato&lt;/b&gt; e attualmente &lt;b&gt;sbloccato&lt;/b&gt;</translation>
qt/locale/bitcoin_it.ts:        <translation>Il portamonete è &lt;b&gt;cifrato&lt;/b&gt; e attualmente &lt;b&gt;bloccato&lt;/b&gt;</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo:</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo</translation>
qt/locale/bitcoin_it.ts:        <translation>Copia l&apos;importo</translation>
qt/locale/bitcoin_it.ts:        <translation>Impossibile sbloccare il portamonete.</translation>
qt/locale/bitcoin_it.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_it.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_it.ts:        <translation>Mappa le porte tramite l&apos;&amp;UPnP</translation>
qt/locale/bitcoin_it.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_it.ts:        <translation>&amp;Porta:</translation>
qt/locale/bitcoin_it.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_it.ts:        <translation>Porta del proxy (es. 9050)</translation>
qt/locale/bitcoin_it.ts:        <translation>&amp;Unità di misura degli importi in:</translation>
qt/locale/bitcoin_it.ts:        <translation>Portamonete</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo scavato che non è ancora maturato</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo:</translation>
qt/locale/bitcoin_it.ts:        <translation>Copia l&apos;importo</translation>
qt/locale/bitcoin_it.ts:        <translation>L&apos;importo da pagare dev&apos;essere maggiore di 0.</translation>
qt/locale/bitcoin_it.ts:        <translation>L&apos;importo è superiore al saldo attuale</translation>
qt/locale/bitcoin_it.ts:        <translation>&amp;Importo:</translation>
qt/locale/bitcoin_it.ts:        <translation>Sblocco del portafoglio annullato.</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo netto</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo rimosso o aggiunto al saldo.</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo minimo</translation>
qt/locale/bitcoin_it.ts:        <translation>Copia l&apos;importo</translation>
qt/locale/bitcoin_it.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_it.ts:        <translation>Importo</translation>
qt/locale/bitcoin_it.ts:        <source>Error exporting</source>
qt/locale/bitcoin_it.ts:        <translation>Specifica il file portafoglio  (nella cartella dati)</translation>
qt/locale/bitcoin_it.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_it.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_it.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_it.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_it.ts:        <translation>Errore riscontrato durante l&apos;impostazione della porta RPC %u per l&apos;ascolto su IPv4: %s</translation>
qt/locale/bitcoin_it.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_it.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_it.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_it.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_it.ts:        <translation>Errore riscontrato durante l&apos;impostazione della porta RPC %u per l&apos;ascolto su IPv6, tornando su IPv4: %s</translation>
qt/locale/bitcoin_it.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_it.ts:        <translation>Impossibile mettersi in ascolto su una porta. Usa -listen=0 se vuoi usare questa opzione.</translation>
qt/locale/bitcoin_it.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_it.ts:        <translation>Usa UPnP per mappare la porta in ascolto (predefinito: 0)</translation>
qt/locale/bitcoin_it.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_it.ts:        <translation>Usa UPnP per mappare la porta in ascolto (predefinito: 1 when listening)</translation>
qt/locale/bitcoin_it.ts:        <translation>Esegui comando quando una transazione del portafoglio cambia (%s in cmd è sostituito da TxID)</translation>
qt/locale/bitcoin_it.ts:        <translation>Ripeti analisi della catena dei blocchi per cercare le transazioni  mancanti dal portamonete
qt/locale/bitcoin_it.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_it.ts:        <translation>Importo non valido per -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>
qt/locale/bitcoin_it.ts:        <translation>Importo non valido</translation>
qt/locale/bitcoin_it.ts:        <translation>Caricamento portamonete...</translation>
qt/locale/bitcoin_sq.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sq.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sq.ts:        <translation>Futni frazkalimin e ri në portofol.&lt;br/&gt;Ju lutemi përdorni një frazkalim prej&lt;b&gt;10 ose më shumë shkronjash të rastësishme&lt;b/&gt;, ose tetë apo më shumë fjalë&lt;/b&gt;.</translation>
qt/locale/bitcoin_sq.ts:        <translation>Enkripto portofolin</translation>
qt/locale/bitcoin_sq.ts:        <translation>Ky veprim ka nevojë per frazkalimin e portofolit tuaj që të ç&apos;kyç portofolin.</translation>
qt/locale/bitcoin_sq.ts:        <translation>ç&apos;kyç portofolin.</translation>
qt/locale/bitcoin_sq.ts:        <translation>Ky veprim kërkon frazkalimin e portofolit tuaj që të dekriptoj portofolin.</translation>
qt/locale/bitcoin_sq.ts:        <translation>Dekripto portofolin</translation>
qt/locale/bitcoin_sq.ts:        <translation>Futni frazkalimin e vjetër dhe të ri në portofol. </translation>
qt/locale/bitcoin_sq.ts:        <translation>Konfirmoni enkriptimin e portofolit</translation>
qt/locale/bitcoin_sq.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sq.ts:        <translation>Portofoli u enkriptua</translation>
qt/locale/bitcoin_sq.ts:        <translation>Enkriptimi i portofolit dështoi</translation>
qt/locale/bitcoin_sq.ts:        <translation>Enkriptimi i portofolit dështoi për shkak të një gabimi të brëndshëm. portofoli juaj nuk u enkriptua.</translation>
qt/locale/bitcoin_sq.ts:        <translation>ç&apos;kyçja e portofolit dështoi</translation>
qt/locale/bitcoin_sq.ts:        <translation>Frazkalimi i futur për dekriptimin e portofolit nuk ishte i saktë.</translation>
qt/locale/bitcoin_sq.ts:        <translation>Dekriptimi i portofolit dështoi</translation>
qt/locale/bitcoin_sq.ts:        <translation>Trego një përmbledhje te përgjithshme të portofolit</translation>
qt/locale/bitcoin_sq.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sq.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sq.ts:        <translation>Ndrysho frazkalimin e përdorur per enkriptimin e portofolit</translation>
qt/locale/bitcoin_sq.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sq.ts:        <translation>Portofoli po &lt;b&gt; enkriptohet&lt;/b&gt; dhe është &lt;b&gt; i ç&apos;kyçur&lt;/b&gt;</translation>
qt/locale/bitcoin_sq.ts:        <translation>Portofoli po &lt;b&gt; enkriptohet&lt;/b&gt; dhe është &lt;b&gt; i kyçur&lt;/b&gt;</translation>
qt/locale/bitcoin_sq.ts:        <translation>Nuk mund të ç&apos;kyçet portofoli.</translation>
qt/locale/bitcoin_sq.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sq.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sq.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sq.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sq.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sq.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sq.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sq.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sq.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sq.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sq.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sq.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sq.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sq.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sq.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sq.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sq.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sq.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_nb.qm matches
qt/locale/bitcoin_af_ZA.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Error exporting</source>
qt/locale/bitcoin_af_ZA.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_af_ZA.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_af_ZA.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_af_ZA.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Error exporting</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_af_ZA.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_af_ZA.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_zh_TW.qm matches
qt/locale/bitcoin_ky.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ky.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ky.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ky.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ky.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ky.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ky.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ky.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ky.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ky.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ky.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ky.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ky.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ky.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ky.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ky.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ky.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ky.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ky.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ky.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ky.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ky.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ky.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ky.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pt_PT.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>IMPORTANTE: Qualquer cópia de segurança anterior da carteira deverá ser substituída com o novo, actualmente encriptado, ficheiro de carteira. Por razões de segurança, cópias de segurança não encriptadas efectuadas anteriormente do ficheiro da carteira tornar-se-ão inúteis assim que começar a usar a nova carteira encriptada.</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_pt_PT.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Mapear porta usando &amp;UPnP</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>&amp;Porta:</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Porta do proxy (p.ex. 9050)</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_pt_PT.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Ocorreu um erro ao definir a porta %u do serviço RPC a escutar em IPv4: %s</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_pt_PT.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_pt_PT.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Ocorreu um erro ao definir a porta %u do serviço RPC a escutar em IPv6, a usar IPv4: %s</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Falhou a escutar em qualquer porta. Use -listen=0 se quer isto.</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Usar UPnP para mapear a porta de escuta (padrão: 0)</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_pt_PT.ts:        <translation>Usar UPnP para mapear a porta de escuta (padrão: 1 ao escutar)</translation>
qt/locale/bitcoin_pt_PT.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_uk.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_uk.ts:        <source>Error exporting</source>
qt/locale/bitcoin_uk.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_uk.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_uk.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_uk.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_uk.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_uk.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_uk.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_uk.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_uk.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_uk.ts:        <source>Error exporting</source>
qt/locale/bitcoin_uk.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_uk.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_uk.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_uk.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_uk.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_uk.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_uk.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_uk.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_uk.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_uk.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_uk.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_uk.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ka.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ka.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ka.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ka.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ka.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ka.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ka.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ka.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ka.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ka.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ka.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ka.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ka.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ka.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ka.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ka.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ka.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ka.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ka.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ka.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ka.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ka.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ka.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ka.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Error exporting</source>
qt/locale/bitcoin_eu_ES.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_eu_ES.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_eu_ES.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_eu_ES.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Error exporting</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_eu_ES.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_eu_ES.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_fr.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_fr.ts:        <translation>Exporter votre répertoire d&apos;adresses</translation>
qt/locale/bitcoin_fr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fr.ts:        <translation>Erreur lors de l&apos;export</translation>
qt/locale/bitcoin_fr.ts:        <translation>Saisir la nouvelle phrase de passe pour le portefeuille. &lt;br/&gt;Veuillez utiliser une phrase de passe de &lt;b&gt;10 caractères aléatoires ou plus&lt;/b&gt;, ou de &lt;b&gt;huit mots ou plus&lt;/b&gt;.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Chiffrer le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Cette opération nécessite votre phrase de passe pour déverrouiller le portefeuille.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Déverrouiller le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Cette opération nécessite votre phrase de passe pour déchiffrer le portefeuille.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Déchiffrer le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Saisir l’ancienne phrase de passe pour le portefeuille ainsi que la nouvelle.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Confirmer le chiffrement du portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Avertissement : Si vous chiffrez votre portefeuille et perdez votre passphrase, vous ne pourrez &lt;b&gt;plus accéder à vos SUMCOINs&lt;/b&gt;!</translation>
qt/locale/bitcoin_fr.ts:        <translation>Êtes-vous sûr de vouloir chiffrer votre portefeuille ?</translation>
qt/locale/bitcoin_fr.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_fr.ts:        <translation>IMPORTANT : Toute sauvegarde précédente de votre fichier de portefeuille devrait être remplacée par le nouveau fichier de portefeuille chiffré. Pour des raisons de sécurité, les sauvegardes précédentes de votre fichier de portefeuille non chiffré deviendront inutilisables dès lors que vous commencerez à utiliser le nouveau portefeuille chiffré.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Portefeuille chiffré</translation>
qt/locale/bitcoin_fr.ts:        <translation>L&apos;application SUMCOIN va désormais se terminer afin de finaliser le processus de chiffrage. Merci de noter que le chiffrage du portefeuille ne garantit pas de se prémunir du vol via utilisation de malware, qui auraient pu infecter votre ordinateur. </translation>
qt/locale/bitcoin_fr.ts:        <translation>Le chiffrement du portefeuille a échoué</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le chiffrement du portefeuille a échoué en raison d&apos;une erreur interne. Votre portefeuille n&apos;a pas été chiffré.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le déverrouillage du portefeuille a échoué</translation>
qt/locale/bitcoin_fr.ts:        <translation>La phrase de passe saisie pour déchiffrer le portefeuille est incorrecte.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le déchiffrage du portefeuille a échoué</translation>
qt/locale/bitcoin_fr.ts:        <translation>La phrase de passe du portefeuille a été modifiée avec succès.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Afficher une vue d’ensemble du portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>&amp;Chiffrer le portefeuille...</translation>
qt/locale/bitcoin_fr.ts:        <translation>Sauvegarder le &amp;portefeuille...</translation>
qt/locale/bitcoin_fr.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_fr.ts:        <translation>&amp;Exporter...</translation>
qt/locale/bitcoin_fr.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_fr.ts:        <translation>Export des données de l&apos;onglet courant vers un fichier</translation>
qt/locale/bitcoin_fr.ts:        <translation>Chiffrer ou déchiffrer le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Sauvegarder le portefeuille vers un autre emplacement</translation>
qt/locale/bitcoin_fr.ts:        <translation>Modifier la phrase de passe utilisée pour le chiffrement du portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Déverrouiller le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>&amp;Verrouiller le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Verrouiller le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Pas de staking car votre portefeuille est verouillé</translation>
qt/locale/bitcoin_fr.ts:        <translation> Pas de staking car votre portefeuille est hors ligne</translation>
qt/locale/bitcoin_fr.ts:        <translation>Pas de staking car votre portefeuille est en cours de synchronisation</translation>
qt/locale/bitcoin_fr.ts:        <translation>&amp;Déverrouiller le portefeuille...</translation>
qt/locale/bitcoin_fr.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_fr.ts:        <translation>Cette transaction dépasse la limite autorisée. Vous pouvez tout de même effectuer cette opération, moyennant %1 de frais, qui seront envoyés aux noeuds qui valideront cette transaction, et dont l&apos;objectif vise à supporter le réseau. Souhaitez-vous payer ces frais ?</translation>
qt/locale/bitcoin_fr.ts:        <translation>L&apos;adresse du portefeuille SUMCOIN n&apos;as pas pu être correctement identifiée, car invalide ou malformée.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le portefeuille est &lt;b&gt;chiffré&lt;/b&gt; et est actuellement &lt;b&gt;déverrouillé&lt;/b&gt;</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le portefeuille est &lt;b&gt;chiffré&lt;/b&gt; et actuellement &lt;b&gt;verrouillé&lt;/b&gt;</translation>
qt/locale/bitcoin_fr.ts:        <translation>Sauvegarder le portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Données liées au portefeuille (*.dat)</translation>
qt/locale/bitcoin_fr.ts:        <translation>Une erreur a été rencontrée lors de la  sauvegarde du portefeuille vers la nouvelle destination.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Impossible de déverrouiller le portefeuille.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Détacher la base des blocs et adresses à la fermeture. Vous pourrez les utiliser dans un autre dossier mais cela ralentit la fermeture. Le portefeuille est lui toujours détaché.</translation>
qt/locale/bitcoin_fr.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_fr.ts:        <translation>Ouvrir automatiquemwnr le port client de SUMCOIN sur le routeur. Ceci ne fonctionne que dans le cas où le support UPnP sur votre routeur existe et est actif.</translation>
qt/locale/bitcoin_fr.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_fr.ts:        <translation>Mapper le port avec l&apos;&amp;UPnP</translation>
qt/locale/bitcoin_fr.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_fr.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_fr.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_fr.ts:        <translation>Port du serveur Proxy mandataire (par ex. 9050)</translation>
qt/locale/bitcoin_fr.ts:        <translation>Les informations affichées peuvent être obsolètes. Votre portefeuille se synchronise automatiquement avec le réseau SUMCOIN mais ce processus n&apos;est pas encore terminé.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Portefeuille</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur: La transaction a été rejetée. Cela peut se produire si une quantité d&apos;argent de votre portefeuille a déjà été dépensée, comme dans le cas où une copie du fichier wallet.dat aurait été utilisée afin d&apos;effectuer des dépenses, à la place du fichier courant.</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le déverrouillage du portefeuille a été annulé.</translation>
qt/locale/bitcoin_fr.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_fr.ts:        <translation>Exporter les données de la transaction</translation>
qt/locale/bitcoin_fr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fr.ts:        <translation>Erreur lors de l&apos;export</translation>
qt/locale/bitcoin_fr.ts:        <translation>Spécifier le fichier de portefeuille (dans le répertoire de données)</translation>
qt/locale/bitcoin_fr.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_fr.ts:        <translation>Écouter les connexions sur le &lt;port&gt; (par défault: 13800 ou testnet: 23800)</translation>
qt/locale/bitcoin_fr.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_fr.ts:        <translation>Connexion à l&apos;adresse fournie. Utiliser la notation [machine]:port pour les adresses IPv6</translation>
qt/locale/bitcoin_fr.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_fr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_fr.ts:        <translation>Une erreur est survenue lors du positionnement du port RPC %u pour écouter sur une adresse IPv4 : %s</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur: La transaction a été rejetée. Cela peut se produire si une quantité d&apos;argent de votre portefeuille a déjà été dépensée, comme dans le cas où une copie du fichier wallet.dat aurait été utilisée afin d&apos;effectuer des dépenses, à la place du fichier courant.</translation>
qt/locale/bitcoin_fr.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_fr.ts:        <translation>Écouter les connexions JSON-RPC sur le &lt;port&gt; (default: 13801 or testnet: 23801)</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur: Portefeuille verrouillé, impossible d&apos;effectuer cette transaction</translation>
qt/locale/bitcoin_fr.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_fr.ts:        <translation>Import en cours du fichier de chaîne de blocs</translation>
qt/locale/bitcoin_fr.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_fr.ts:        <translation>Import en masse du fichier de chaîne bloc</translation>
qt/locale/bitcoin_fr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_fr.ts:        <translation>Une erreur est survenue lors du réglage du port RPC %u pour écouter sur IPv6, retour à IPv4 : %s</translation>
qt/locale/bitcoin_fr.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_fr.ts:        <translation>Échec de l&apos;écoute sur un port quelconque. Utilisez -listen=0 si vous voulez ceci.</translation>
qt/locale/bitcoin_fr.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_fr.ts:        <translation>Utiliser l&apos;UPnP pour rediriger le port d&apos;écoute (par défaut: 0)</translation>
qt/locale/bitcoin_fr.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_fr.ts:        <translation>Utiliser l&apos;UPnP pour rediriger le port d&apos;écoute (par défaut: 1 lors de l&apos;écoute)</translation>
qt/locale/bitcoin_fr.ts:        <translation>Exécuter la commande lorsqu&apos;une transaction du portefeuille change (%s dans la commande est remplacée par TxID)</translation>
qt/locale/bitcoin_fr.ts:        <translation>Mettre à niveau le portefeuille vers le format le plus récent</translation>
qt/locale/bitcoin_fr.ts:        <translation>Réanalyser la chaîne de blocs pour les transactions de portefeuille manquantes</translation>
qt/locale/bitcoin_fr.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_fr.ts:        <translation>Importe les blocs d&apos;un fichier externe blk000?.dat</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur: Portefeuille déverrouillé uniquement pour &quot;staking&quot; , impossible d&apos;effectuer cette transaction</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le portefeuille %s est situé en dehors du répertoire de données %s</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur lors du chargement de wallet.dat: portefeuille corrompu</translation>
qt/locale/bitcoin_fr.ts:        <translation>Erreur de chargement du fichier wallet.dat: le portefeuille nécessite une version plus récente de l&apos;application SUMCOIN</translation>
qt/locale/bitcoin_fr.ts:        <translation>Le portefeuille nécessite d&apos;être réédité : Merci de relancer l&apos;application SUMCOIN</translation>
qt/locale/bitcoin_fr.ts:        <translation>Connexion au port %s impossible. L&apos;application SUMCOIN est probablement déjà en cours d&apos;exécution</translation>
qt/locale/bitcoin_fr.ts:        <translation>Chargement du portefeuille…</translation>
qt/locale/bitcoin_fr.ts:        <translation>Impossible de revenir à une version inférieure du portefeuille</translation>
Binary file qt/locale/bitcoin_pt_BR.qm matches
qt/locale/bitcoin_el_GR.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_el_GR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_el_GR.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_el_GR.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_el_GR.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_el_GR.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_el_GR.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_el_GR.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_el_GR.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_el_GR.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_el_GR.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_el_GR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_el_GR.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_el_GR.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_el_GR.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_el_GR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_el_GR.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_el_GR.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_el_GR.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_el_GR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_el_GR.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_el_GR.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_el_GR.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_el_GR.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_de.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_de.ts:        <source>Error exporting</source>
qt/locale/bitcoin_de.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_de.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_de.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_de.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_de.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_de.ts:        <translation>Automatisch den SUMCOIN client port auf dem Router öffnen. Das funktioniert nur wenn der Router UPnP unterstützt und UPnP aktiviert ist.</translation>
qt/locale/bitcoin_de.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_de.ts:        <translation>Portweiterleitung via &amp;UPnP</translation>
qt/locale/bitcoin_de.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_de.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_de.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_de.ts:        <translation>Port des Proxies (z.B. 9050)</translation>
qt/locale/bitcoin_de.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_de.ts:        <translation>Exportiere Transaktionsdaten</translation>
qt/locale/bitcoin_de.ts:        <source>Error exporting</source>
qt/locale/bitcoin_de.ts:        <translation>Fehler beim Exportieren</translation>
qt/locale/bitcoin_de.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_de.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_de.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_de.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_de.ts:        <translation>Beim Einrichten des abzuhörenden RPC-Ports %u für IPv4 ist ein Fehler aufgetreten: %s</translation>
qt/locale/bitcoin_de.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_de.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_de.ts:        <translation>Importiere Block Kette aus Datei</translation>
qt/locale/bitcoin_de.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_de.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_de.ts:        <translation>Beim Einrichten des abzuhörenden RPC-Ports %u für IPv6 ist ein Fehler aufgetreten, es wird auf IPv4 zurückgegriffen: %s</translation>
qt/locale/bitcoin_de.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_de.ts:        <translation>Fehler, es konnte kein Port abgehört werden. Wenn dies so gewünscht wird -listen=0 verwenden.</translation>
qt/locale/bitcoin_de.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_de.ts:        <translation>UPnP verwenden, um die Portweiterleitung einzurichten (Standard: 0)</translation>
qt/locale/bitcoin_de.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_de.ts:        <translation>UPnP verwenden, um die Portweiterleitung einzurichten (Standard: 1, wenn abgehört wird)</translation>
qt/locale/bitcoin_de.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_de.ts:        <translation>Importiere Blöcke aus externer blk000?.dat Datei.</translation>
qt/locale/bitcoin_lv_LV.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Error exporting</source>
qt/locale/bitcoin_lv_LV.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_lv_LV.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_lv_LV.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_lv_LV.ts:        <translation>Kartēt portu, izmantojot &amp;UPnP</translation>
qt/locale/bitcoin_lv_LV.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_lv_LV.ts:        <translation>&amp;Ports:</translation>
qt/locale/bitcoin_lv_LV.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_lv_LV.ts:        <translation>Proxy ports (piem. 9050)</translation>
qt/locale/bitcoin_lv_LV.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Error exporting</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_lv_LV.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_lv_LV.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_lv_LV.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_sr.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sr.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sr.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sr.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sr.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sr.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sr.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sr.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sr.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sr.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sr.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sr.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sr.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sr.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sr.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sr.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sr.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sr.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sr.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sr.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_pam.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_pam.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pam.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_pam.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_pam.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_pam.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_pam.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_pam.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_pam.ts:        <translation>Mapa ng ning port gamit ing &amp;UPnP</translation>
qt/locale/bitcoin_pam.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_pam.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_pam.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_pam.ts:        <translation>Port na ning proxy(e.g. 9050)</translation>
qt/locale/bitcoin_pam.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_pam.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pam.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_pam.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_pam.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_pam.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_pam.ts:        <translation>Atin kamalian a milyari kabang ayusan ya ing RPC port %u para keng pamakiramdam king IPv4: %s</translation>
qt/locale/bitcoin_pam.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_pam.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_pam.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_pam.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_pam.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_pam.ts:        <translation>Memali ya ing pamakiramdam kareng gang nanung port. Gamita me ini -listen=0 nung buri me ini.</translation>
qt/locale/bitcoin_pam.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_pam.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_pam.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_de.qm matches
Binary file qt/locale/bitcoin_ka.qm matches
qt/locale/bitcoin_th_TH.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_th_TH.ts:        <source>Error exporting</source>
qt/locale/bitcoin_th_TH.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_th_TH.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_th_TH.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_th_TH.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_th_TH.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_th_TH.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_th_TH.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_th_TH.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_th_TH.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_th_TH.ts:        <source>Error exporting</source>
qt/locale/bitcoin_th_TH.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_th_TH.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_th_TH.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_th_TH.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_th_TH.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_th_TH.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_th_TH.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_th_TH.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_th_TH.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_th_TH.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_th_TH.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_th_TH.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_bs.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_bs.ts:        <source>Error exporting</source>
qt/locale/bitcoin_bs.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_bs.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_bs.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_bs.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_bs.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_bs.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_bs.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_bs.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_bs.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_bs.ts:        <source>Error exporting</source>
qt/locale/bitcoin_bs.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_bs.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_bs.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_bs.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_bs.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_bs.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_bs.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_bs.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_bs.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_bs.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_bs.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_bs.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_fi.qm matches
qt/locale/bitcoin_ca@valencia.ts:        <translation>Copieu l&apos;adreça seleccionada al porta-retalls del sistema</translation>
qt/locale/bitcoin_ca@valencia.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ca@valencia.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_hu.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_hu.ts:        <translation>Címjegyzék Exportálása</translation>
qt/locale/bitcoin_hu.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hu.ts:        <translation>Hiba exportálás</translation>
qt/locale/bitcoin_hu.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_hu.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_hu.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_hu.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_hu.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_hu.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_hu.ts:        <translation>&amp;UPnP port-feltérképezés</translation>
qt/locale/bitcoin_hu.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_hu.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_hu.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_hu.ts:        <translation>Proxy portja (pl.: 9050)</translation>
qt/locale/bitcoin_hu.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_hu.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hu.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_hu.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_hu.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_hu.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_hu.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_hu.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_hu.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_hu.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_hu.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_hu.ts:        <translation>Egyik hálózati porton sem sikerül hallgatni. Használja a -listen=0 kapcsolót, ha ezt szeretné.</translation>
qt/locale/bitcoin_hu.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_hu.ts:        <translation>UPnP-használat engedélyezése a figyelő port feltérképezésénél (default: 0)</translation>
qt/locale/bitcoin_hu.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_hu.ts:        <translation>UPnP-használat engedélyezése a figyelő port feltérképezésénél (default: 1 when listening)</translation>
qt/locale/bitcoin_hu.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_ky.qm matches
Binary file qt/locale/bitcoin_lv_LV.qm matches
qt/locale/bitcoin_kk_KZ.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Error exporting</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Error exporting</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_kk_KZ.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_pl.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_pl.ts:        <translation>Exportuj Książkę Adresową</translation>
qt/locale/bitcoin_pl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pl.ts:        <translation>Błąd exportowania</translation>
qt/locale/bitcoin_pl.ts:        <translation>Wprowadź nowe hasło dla portfela.&lt;br/&gt;Proszę użyć hasła składającego się z &lt;b&gt;10 lub więcej losowych znaków&lt;/b&gt; lub &lt;b&gt;ośmiu lub więcej słów&lt;/b&gt;.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Zaszyfruj portfel</translation>
qt/locale/bitcoin_pl.ts:        <translation>Ta operacja wymaga hasła do portfela ażeby odblokować portfel.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Odblokuj portfel</translation>
qt/locale/bitcoin_pl.ts:        <translation>Ta operacja wymaga hasła do portfela ażeby odszyfrować portfel.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Odszyfruj portfel</translation>
qt/locale/bitcoin_pl.ts:        <translation>Podaj stare i nowe hasło do portfela.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Potwierdź szyfrowanie portfela</translation>
qt/locale/bitcoin_pl.ts:        <translation>Uwaga: Jeśli zaszyfrujesz swój portfel i zgubisz hasło, wtedy&lt;b&gt;UTRACISZ SWOJE MONETY!&lt;/b&gt;!</translation>
qt/locale/bitcoin_pl.ts:        <translation>Jesteś pewien, że chcesz zaszyfrować swój portfel?</translation>
qt/locale/bitcoin_pl.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_pl.ts:        <translation>WAŻNE: Wszystkie wykonane wcześniej kopie pliku portfela powinny być zamienione na nowe, szyfrowane pliki. Z powodów bezpieczeństwa, poprzednie kopie nieszyfrowanych plików portfela staną się bezużyteczne jak tylko zaczniesz korzystać z nowego, szyfrowanego portfela.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Portfel zaszyfrowany</translation>
qt/locale/bitcoin_pl.ts:        <translation>Szyfrowanie portfela nie powiodło się</translation>
qt/locale/bitcoin_pl.ts:        <translation>Szyfrowanie portfela nie powiodło się z powodu wewnętrznego błędu. Twój portfel nie został zaszyfrowany.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Odblokowanie portfela nie powiodło się</translation>
qt/locale/bitcoin_pl.ts:        <translation>Wprowadzone hasło do odszyfrowania portfela jest niepoprawne.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Odszyfrowanie portfela nie powiodło się</translation>
qt/locale/bitcoin_pl.ts:        <translation>Hasło portfela zostało pomyślnie zmienione.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Pokazuje ogólny zarys portfela</translation>
qt/locale/bitcoin_pl.ts:        <translation>Zaszyfruj Portf&amp;el</translation>
qt/locale/bitcoin_pl.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_pl.ts:        <translation>&amp;Exportuj</translation>
qt/locale/bitcoin_pl.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_pl.ts:        <translation>Zapasowy portfel w innej lokalizacji</translation>
qt/locale/bitcoin_pl.ts:        <translation>Zmień hasło użyte do szyfrowania portfela</translation>
qt/locale/bitcoin_pl.ts:        <translation>Portfel</translation>
qt/locale/bitcoin_pl.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_pl.ts:        <translation>Portfel jest &lt;b&gt;zaszyfrowany&lt;/b&gt; i obecnie &lt;b&gt;niezablokowany&lt;/b&gt;</translation>
qt/locale/bitcoin_pl.ts:        <translation>Portfel jest &lt;b&gt;zaszyfrowany&lt;/b&gt; i obecnie &lt;b&gt;zablokowany&lt;/b&gt;</translation>
qt/locale/bitcoin_pl.ts:        <translation>Nie można było odblokować portfela.</translation>
qt/locale/bitcoin_pl.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_pl.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_pl.ts:        <translation>Mapuj port używając &amp;UPnP</translation>
qt/locale/bitcoin_pl.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_pl.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_pl.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_pl.ts:        <translation>Port proxy (np. 9050)</translation>
qt/locale/bitcoin_pl.ts:        <translation>Portfel</translation>
qt/locale/bitcoin_pl.ts:        <translation>Odblokowanie portfela zostało anulowane.</translation>
qt/locale/bitcoin_pl.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_pl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pl.ts:        <translation>Określ plik portfela (w obrębie folderu danych)</translation>
qt/locale/bitcoin_pl.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_pl.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_pl.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_pl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_pl.ts:        <translation>Wystąpił błąd podczas ustawiania portu RPC %u w tryb nasłuchu: %s</translation>
qt/locale/bitcoin_pl.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_pl.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_pl.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_pl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_pl.ts:        <translation>Wystąpił błąd podczas ustawiania portu RPC %u w tryb nasłuchu dla IPv6, korzystam z IPv4: %s</translation>
qt/locale/bitcoin_pl.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_pl.ts:        <translation>Próba otwarcia jakiegokolwiek portu nie powiodła się. Użyj -listen=0 jeśli tego chcesz.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Wyślij informację/raport do konsoli zamiast do pliku debug.log.</translation>
qt/locale/bitcoin_pl.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_pl.ts:        <translation>Używaj UPnP do mapowania portu nasłuchu (domyślnie: 0)</translation>
qt/locale/bitcoin_pl.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_pl.ts:        <translation>Używaj UPnP do mapowania portu nasłuchu (domyślnie: 1 gdy nasłuchuje)</translation>
qt/locale/bitcoin_pl.ts:        <translation>Wykonaj polecenie, kiedy transakcja portfela ulegnie zmianie (%s w poleceniu zostanie zastąpione przez TxID)</translation>
qt/locale/bitcoin_pl.ts:        <translation>Zaktualizuj portfel do najnowszego formatu.</translation>
qt/locale/bitcoin_pl.ts:        <translation>Przeskanuj blok łańcuchów żeby znaleźć zaginione transakcje portfela</translation>
qt/locale/bitcoin_pl.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_pl.ts:        <translation>Błąd ładowania wallet.dat: Uszkodzony portfel</translation>
qt/locale/bitcoin_pl.ts:        <translation>Wczytywanie portfela...</translation>
qt/locale/bitcoin_pl.ts:        <translation>Nie można dezaktualizować portfela</translation>
qt/locale/bitcoin_cs.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_cs.ts:        <source>Error exporting</source>
qt/locale/bitcoin_cs.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_cs.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_cs.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_cs.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_cs.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_cs.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_cs.ts:        <translation>Namapovat port přes &amp;UPnP</translation>
qt/locale/bitcoin_cs.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_cs.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_cs.ts:        <translation>Port proxy (např. 9050)</translation>
qt/locale/bitcoin_cs.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_cs.ts:        <source>Error exporting</source>
qt/locale/bitcoin_cs.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_cs.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_cs.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_cs.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_cs.ts:        <translation>Při nastavování naslouchacího RPC portu %i pro IPv4 nastala chyba: %s</translation>
qt/locale/bitcoin_cs.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_cs.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_cs.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_cs.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_cs.ts:        <translation>Při nastavování naslouchacího RPC portu %u pro IPv6 nastala chyba, vracím se k IPv4: %s</translation>
qt/locale/bitcoin_cs.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_cs.ts:        <translation>Nepodařilo se naslouchat na žádném portu. Použij -listen=0, pokud to byl tvůj záměr.</translation>
qt/locale/bitcoin_cs.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_cs.ts:        <translation>Použít UPnP k namapování naslouchacího portu (výchozí: 0)</translation>
qt/locale/bitcoin_cs.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_cs.ts:        <translation>Použít UPnP k namapování naslouchacího portu (výchozí: 1, pokud naslouchá)</translation>
qt/locale/bitcoin_cs.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ms_MY.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ms_MY.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ms_MY.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ms_MY.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ms_MY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ms_MY.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_cy.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_cy.ts:        <source>Error exporting</source>
qt/locale/bitcoin_cy.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_cy.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_cy.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_cy.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_cy.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_cy.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_cy.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_cy.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_cy.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_cy.ts:        <source>Error exporting</source>
qt/locale/bitcoin_cy.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_cy.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_cy.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_cy.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_cy.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_cy.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_cy.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_cy.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_cy.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_cy.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_cy.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_cy.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_pam.qm matches
qt/locale/bitcoin_fa_IR.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fa_IR.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_fa_IR.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_fa_IR.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_fa_IR.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_fa_IR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_fa_IR.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_nl.qm matches
Binary file qt/locale/bitcoin_bg.qm matches
qt/locale/bitcoin_be_BY.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_be_BY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_be_BY.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_be_BY.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_be_BY.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_be_BY.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_be_BY.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_be_BY.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_be_BY.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_be_BY.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_be_BY.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_be_BY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_be_BY.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_be_BY.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_be_BY.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_be_BY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_be_BY.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_be_BY.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_be_BY.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_be_BY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_be_BY.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_be_BY.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_be_BY.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_be_BY.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_ca_ES.qm matches
Binary file qt/locale/bitcoin_el_GR.qm matches
Binary file qt/locale/bitcoin_ru.qm matches
qt/locale/bitcoin_gl.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_gl.ts:        <translation>Exportar datos da libreta de direccións.</translation>
qt/locale/bitcoin_gl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_gl.ts:        <translation>Error exportando</translation>
qt/locale/bitcoin_gl.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_gl.ts:        <translation>IMPORTANTE: Calquera copia de seguridade previa que fixeses do teu arquivo de moedeiro debería ser substituída polo recén xerado arquivo encriptado de moedeiro. Por razóns de seguridade, as copias de seguridade previas de un arquivo de moedeiro desencriptado tornaránse inútiles no momento no que comeces a emprega-lo novo, encriptado, moedeiro.</translation>
qt/locale/bitcoin_gl.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_gl.ts:        <translation>&amp;Exportar...</translation>
qt/locale/bitcoin_gl.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_gl.ts:        <translation>Exportar datos da pestana actual a un arquivo</translation>
qt/locale/bitcoin_gl.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_gl.ts:        <translation>Importe:</translation>
qt/locale/bitcoin_gl.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_gl.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_gl.ts:        <translation>Mapear porto empregando &amp;UPnP</translation>
qt/locale/bitcoin_gl.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_gl.ts:        <translation>&amp;Porto:</translation>
qt/locale/bitcoin_gl.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_gl.ts:        <translation>Porto do proxy (exemplo: 9050)</translation>
qt/locale/bitcoin_gl.ts:        <translation>Importe:</translation>
qt/locale/bitcoin_gl.ts:        <translation>Pegar dirección dende portapapeis</translation>
qt/locale/bitcoin_gl.ts:        <translation>Pegar dirección dende portapapeis</translation>
qt/locale/bitcoin_gl.ts:        <translation>Copiar a sinatura actual ao portapapeis do sistema</translation>
qt/locale/bitcoin_gl.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_gl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_gl.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_gl.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_gl.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_gl.ts:        <translation>Umbral para desconectar pares con mal comportamento (por defecto: 100)</translation>
qt/locale/bitcoin_gl.ts:        <translation>Número de segundos para manter sen reconectar aos pares con mal comportamento (por defecto: 86400)</translation>
qt/locale/bitcoin_gl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_gl.ts:        <translation>Ocorreu un erro mentres se establecía o porto RPC %u para escoitar sobre IPv4: %s</translation>
qt/locale/bitcoin_gl.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_gl.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_gl.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_gl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_gl.ts:        <translation>Ocorreu un erro mentres se establecía o porto RPC %u para escoitar sobre IPv6, voltando a IPv4: %s</translation>
qt/locale/bitcoin_gl.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_gl.ts:        <translation>Fallou escoitar en calquera porto. Emprega -listen=0 se queres esto.</translation>
qt/locale/bitcoin_gl.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_gl.ts:        <translation>Usar UPnP para mapear o porto de escoita (por defecto: 0)</translation>
qt/locale/bitcoin_gl.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_gl.ts:        <translation>Usar UPnP para mapear o porto de escoita (por defecto: 1 se á escoita)</translation>
qt/locale/bitcoin_gl.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_es_MX.ts:        <translation>Copiar el domicilio seleccionado al portapapeles del sistema</translation>
qt/locale/bitcoin_es_MX.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_es_MX.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_MX.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_es_MX.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_es_MX.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_es_MX.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_es_MX.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_es_MX.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_es_MX.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_es_MX.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_es_MX.ts:        <translation>Pegar dirección  del portapapeles</translation>
qt/locale/bitcoin_es_MX.ts:        <translation>Pegar dirección  del portapapeles</translation>
qt/locale/bitcoin_es_MX.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_es_MX.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_MX.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_es_MX.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_es_MX.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_es_MX.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_es_MX.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_es_MX.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_es_MX.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_es_MX.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_es_MX.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_es_MX.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_es_MX.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_es_MX.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_es_UY.ts:        <translation>Copia la dirección seleccionada al portapapeles del sistema</translation>
qt/locale/bitcoin_es_UY.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_es_UY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_UY.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_es_UY.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_es_UY.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_es_UY.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_es_UY.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_es_UY.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_es_UY.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_es_UY.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_es_UY.ts:        <translation>Pegar la dirección desde el portapapeles</translation>
qt/locale/bitcoin_es_UY.ts:        <translation>Pegar la dirección desde el portapapeles</translation>
qt/locale/bitcoin_es_UY.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_es_UY.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_UY.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_es_UY.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_es_UY.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_es_UY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_es_UY.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_es_UY.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_es_UY.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_es_UY.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_es_UY.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_es_UY.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_es_UY.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_es_UY.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_nb.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_nb.ts:        <translation>Eksporter Adressebok</translation>
qt/locale/bitcoin_nb.ts:        <source>Error exporting</source>
qt/locale/bitcoin_nb.ts:        <translation>Feil under eksportering</translation>
qt/locale/bitcoin_nb.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_nb.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_nb.ts:        <translation>&amp;Eksporter...</translation>
qt/locale/bitcoin_nb.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_nb.ts:        <translation>Eksporter dataene i nåværende fane til en fil</translation>
qt/locale/bitcoin_nb.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_nb.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_nb.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_nb.ts:        <translation>Sett opp port vha. &amp;UPnP</translation>
qt/locale/bitcoin_nb.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_nb.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_nb.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_nb.ts:        <translation>Proxyens port (f.eks. 9050)</translation>
qt/locale/bitcoin_nb.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_nb.ts:        <source>Error exporting</source>
qt/locale/bitcoin_nb.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_nb.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_nb.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_nb.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_nb.ts:        <translation>En feil oppstod ved opprettelse av RPC port %u for lytting: %s</translation>
qt/locale/bitcoin_nb.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_nb.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_nb.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_nb.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_nb.ts:        <translation>En feil oppstod under oppsettet av RPC port %u for IPv6, tilbakestilles til IPv4: %s</translation>
qt/locale/bitcoin_nb.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_nb.ts:        <translation>Kunne ikke lytte på noen port. Bruk -listen=0 hvis det er dette du vil.</translation>
qt/locale/bitcoin_nb.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_nb.ts:        <translation>Bruk UPnP for lytteport (standardverdi: 0)</translation>
qt/locale/bitcoin_nb.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_nb.ts:        <translation>Bruk UPnP for lytteport (standardverdi: 1 ved lytting)</translation>
qt/locale/bitcoin_nb.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_es_CL.qm matches
qt/locale/bitcoin_vi_VN.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_vi_VN.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_vi_VN.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_vi_VN.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_vi_VN.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_vi_VN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_vi_VN.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_sv.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sv.ts:        <translation>Exportera adressboken</translation>
qt/locale/bitcoin_sv.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sv.ts:        <translation>Exportera felmeddelanden</translation>
qt/locale/bitcoin_sv.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sv.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sv.ts:        <translation>&amp;Exportera...</translation>
qt/locale/bitcoin_sv.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sv.ts:        <translation>Exportera datan i tabben till en fil</translation>
qt/locale/bitcoin_sv.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sv.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sv.ts:        <translation>Öppna automatiskt SUMCOIN klientens port på routern. Detta fungerar endast om din router stödjer UPnP och det är aktiverat.</translation>
qt/locale/bitcoin_sv.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sv.ts:        <translation>Tilldela port med hjälp av &amp;UPnP</translation>
qt/locale/bitcoin_sv.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sv.ts:        <translation>&amp;Port: </translation>
qt/locale/bitcoin_sv.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sv.ts:        <translation>Proxyns port (t.ex. 9050)</translation>
qt/locale/bitcoin_sv.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sv.ts:        <translation>Exportera transaktionsdata</translation>
qt/locale/bitcoin_sv.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sv.ts:        <translation>Fel vid exportering</translation>
qt/locale/bitcoin_sv.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sv.ts:        <translation>Lyssna efter anslutningar på &lt;port&gt; (standard: 13800 eller testnät: 23800)</translation>
qt/locale/bitcoin_sv.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sv.ts:        <translation>Bind till angiven adress. Använd [host]:port för IPv6</translation>
qt/locale/bitcoin_sv.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sv.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sv.ts:        <translation>Ett fel uppstod vid upprättandet av RPC port %u för att lyssna på IPv4: %s</translation>
qt/locale/bitcoin_sv.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sv.ts:        <translation>Lyssna efter JSON-RPC anslutningar på &lt;port&gt; (standard: 13801 eller testnät: 23801)</translation>
qt/locale/bitcoin_sv.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sv.ts:        <translation>Importerar blockchain data fil.</translation>
qt/locale/bitcoin_sv.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sv.ts:        <translation>Importerar bootstrap blockchain data fil.</translation>
qt/locale/bitcoin_sv.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sv.ts:        <translation>Ett fel uppstod vid upprättandet av RPC port %u för att lyssna på IPv6, faller tillbaka till IPV4: %s</translation>
qt/locale/bitcoin_sv.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sv.ts:        <translation>Misslyckades att lyssna på någon port. Använd -listen=0 om du vill detta.</translation>
qt/locale/bitcoin_sv.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sv.ts:        <translation>Använd UPnP för att mappa den lyssnande porten (förvalt: 0)</translation>
qt/locale/bitcoin_sv.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sv.ts:        <translation>Använd UPnP för att mappa den lyssnande porten (förvalt: 1 under lyssning)</translation>
qt/locale/bitcoin_sv.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_sv.ts:        <translation>Importera block från en extern blk000?.dat fil</translation>
Binary file qt/locale/bitcoin_eo.qm matches
Binary file qt/locale/bitcoin_he.qm matches
qt/locale/bitcoin_zh_TW.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Error exporting</source>
qt/locale/bitcoin_zh_TW.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_zh_TW.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_zh_TW.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_zh_TW.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Error exporting</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_zh_TW.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_zh_TW.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_zh_CN.qm matches
qt/locale/bitcoin_ur_PK.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ur_PK.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ur_PK.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ur_PK.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ur_PK.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ur_PK.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ur_PK.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_it.qm matches
qt/locale/bitcoin_sah.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sah.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sah.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sah.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sah.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sah.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sah.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sah.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sah.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sah.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sah.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sah.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sah.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sah.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sah.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sah.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sah.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sah.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sah.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sah.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sah.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sah.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sah.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sah.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_fr_CA.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Exporter votre répertoire d&apos;adresses</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur lors de l&apos;export</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Saisir la nouvelle phrase de passe pour le portefeuille. &lt;br/&gt;Veuillez utiliser une phrase de passe de &lt;b&gt;10 caractères aléatoires ou plus&lt;/b&gt;, ou de &lt;b&gt;huit mots ou plus&lt;/b&gt;.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Crypter le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Cette opération nécessite votre phrase de passe pour déverrouiller le portefeuille.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Déverrouiller le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Cette opération nécessite votre phrase de passe pour déchiffrer le portefeuille.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Déchiffrer le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Saisir l’ancienne et la nouvelle phrase de passe du portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Confirmer le cryptage du portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>ATTENTION : Si vous cryptez votre portefeuille et perdez votre passphrase, vous ne pourrez plus accéder à vos SUMCOINs</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Êtes-vous sûr de vouloir crypter votre portefeuille ?</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>IMPORTANT : Toute sauvegarde précédente de votre fichier de portefeuille devrait être remplacée par le nouveau fichier de portefeuille crypté. Pour des raisons de sécurité, les sauvegardes précédentes de votre fichier de portefeuille non crypté deviendront inutilisables dès lors que vous commencerez à utiliser le nouveau portefeuille crypté.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Portefeuille crypté</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>L&apos;application SUMCOIN va désormais se terminer afin de finaliser le processus de cryptage. Merci de noter que le cryptage du portefeuille ne garantit pas de se prémunir du vol via l&apos;utilisation de malware, qui auraient pu infecter votre ordinateur. </translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le cryptage du portefeuille a échoué</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le cryptage du portefeuille a échoué en raison d&apos;une erreur interne. Votre portefeuille n&apos;a pas été crypté.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le déverrouillage du portefeuille a échoué</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>La phrase de passe saisie pour décrypter le portefeuille était incorrecte.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le décryptage du portefeuille a échoué</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>La phrase de passe du portefeuille a été modifiée avec succès.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Afficher une vue d’ensemble du portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>&amp;Crypter le portefeuille...</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Sauvegarder le &amp;portefeuille...</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>&amp;Export...</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Export des données de l&apos;onglet courant vers un fichier</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Crypter ou décrypter le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Sauvegarder le portefeuille vers un autre emplacement</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Modifier la phrase de passe utilisée pour le cryptage du portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Déverrouiller le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>&amp;Verrouiller le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Verrouiller le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Ne stack pas, votre portefeuilles est verouillé</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Ne stack pas, votre portefeuilles est hors ligne</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Ne stack pas, votre portefeuille est en cours de synchronisation</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>&amp;Déverrouiller le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Cette transaction dépasse la limite autorisée. Vous pouvez tout de même effectuer cette opération, moyennant %1 de frais, qui seront envoyés aux noeuds qui valideront cette transaction, et dont l&apos;objectif vise à supporter le réseau. Etes-vous d&apos;accord pour payer ces frais ?</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>L&apos;adresse du portefeuille SUMCOIN n&apos;as pas pu être correctement identifiée, car invalide ou malformée.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le portefeuille est &lt;b&gt;crypté&lt;/b&gt; et est actuellement &lt;b&gt;déverrouillé&lt;/b&gt;</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le portefeuille est &lt;b&gt;crypté&lt;/b&gt; et actuellement &lt;b&gt;verrouillé&lt;/b&gt;</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Sauvegarder le portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Données liées au portefeuille (*.dat)</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Une erreur a été rencontrée lors de la tentative de sauvegarde du portefeuille vers la nouvelle destination.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Impossible de déverrouiller le portefeuille.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Détacher la base des block et adresses à la fermeture. Vous pourrez les utiliser dans un autre dossier mais cela ralenti la fermeture. Le portefeuille est lui toujours détaché.</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Ouverture automatique du port client de SUMCOIN sur le routeur. Ceci ne fonctionne que dans le cas où le support UPnP sur votre routeur existe et est actif.</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Mapper le port avec l&apos;&amp;UPnP</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>&amp;Port :</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Port du serveur mandataire (par ex. 9050)</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Les informations affichées peuvent être obsolètes. Votre portefeuille se synchronise automatiquement avec le réseau SUMCOIN mais ce processus n&apos;est pas encore terminé.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Portefeuille</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur: La transaction a été rejetée. Cela peut se produire si une quantité d&apos;argent de votre portefeuille a déjà été dépensée, comme dans le cas où une copie du fichier wallet.dat aurait été utilisée afin d&apos;effectuer des dépenses, à la place du fichier courant.</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le déverrouillage du portefeuille a été annulé.</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Exporter les données de la transaction</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur lors de l&apos;export</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Spécifiez le fichier de portefeuille (dans le répertoire de données)</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Écouter les connexions sur le &lt;port&gt; (default: 13800 or testnet: 23800)</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Connexion à l&apos;adresse fournie. Utiliser la notation [machine]:port pour les adresses IPv6</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_fr_CA.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Une erreur est survenue lors du réglage du port RPC %u pour écouter sur IPv4 : %s</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur: La transaction a été rejetée. Cela peut se produire si une quantité d&apos;argent de votre portefeuille a déjà été dépensée, comme dans le cas où une copie du fichier wallet.dat aurait été utilisée afin d&apos;effectuer des dépenses, à la place du fichier courant.</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Écouter les connexions JSON-RPC sur le &lt;port&gt; (default: 13801 or testnet: 23801)</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur: Portefeuille verrouillé, impossible d&apos;effectuer cette transaction</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Importation du fichier blockchain</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Importation du fichier blockchain</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Une erreur est survenue lors du réglage du port RPC %u pour écouter sur IPv6, retour à IPv4 : %s</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Échec de l&apos;écoute sur un port quelconque. Utilisez -listen=0 si vous voulez ceci.</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Utiliser l&apos;UPnP pour rediriger le port d&apos;écoute (par défaut : 0)</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Utiliser l&apos;UPnP pour rediriger le port d&apos;écoute (par défaut : 1 lors de l&apos;écoute)</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Exécuter la commande lorsqu&apos;une transaction de portefeuille change (%s dans la commande est remplacée par TxID)</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Mettre à niveau le portefeuille vers le format le plus récent</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Réanalyser la chaîne de blocs pour les transactions de portefeuille manquantes</translation>
qt/locale/bitcoin_fr_CA.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_fr_CA.ts:        <translation>Importe les blocs d&apos;un fichier externe blk000?.dat</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur: Portefeuille déverrouillé uniquement pour &quot;stacking&quot; , impossible d&apos;effectuer cette transaction</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Le portefeuille %s réside en dehors répertoire de données %s</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur lors du chargement de wallet.dat : portefeuille corrompu</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Erreur de chargement du fichier wallet.dat: le portefeuille nécessite une version plus récente de l&apos;application SUMCOIN</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>le portefeuille nécessite d&apos;être réédité : Merci de relancer l&apos;application SUMCOIN</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Connexion au port %s impossible. L&apos;application SUMCOIN est probablement déjà en cours d&apos;exécution</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Chargement du portefeuille…</translation>
qt/locale/bitcoin_fr_CA.ts:        <translation>Impossible de revenir à une version inférieure du portefeuille</translation>
Binary file qt/locale/bitcoin_lt.qm matches
qt/locale/bitcoin_es.ts:        <translation>Copiar la dirección seleccionada al portapapeles del sistema</translation>
qt/locale/bitcoin_es.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_es.ts:        <translation>Exportar Data de Libro de Direcciones</translation>
qt/locale/bitcoin_es.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es.ts:        <translation>Error exportando</translation>
qt/locale/bitcoin_es.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_es.ts:        <translation>IMPORTANTE: Cualquier copia de seguridad que haya realizado previamente de su archivo de monedero debe reemplazarse con el nuevo archivo de monedero cifrado. Por razones de seguridad, las copias de seguridad previas del archivo de monedero no cifradas serán inservibles en cuanto comience a usar el nuevo monedero cifrado.</translation>
qt/locale/bitcoin_es.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_es.ts:        <translation>&amp;Exportar...</translation>
qt/locale/bitcoin_es.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_es.ts:        <translation>Exportar los datos en la ficha actual a un archivo</translation>
qt/locale/bitcoin_es.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_es.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_es.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_es.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_es.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_es.ts:        <translation>Pegar dirección desde portapapeles</translation>
qt/locale/bitcoin_es.ts:        <translation>Pegar dirección desde portapapeles</translation>
qt/locale/bitcoin_es.ts:        <translation>Copiar la firma actual al portapapeles del sistema</translation>
qt/locale/bitcoin_es.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_es.ts:        <translation>Exportar datos de transacción</translation>
qt/locale/bitcoin_es.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es.ts:        <translation>Error al exportar</translation>
qt/locale/bitcoin_es.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_es.ts:        <translation>Escuchando conexiones en el puerto &lt;port&gt; (por defecto: 13800 o testnet: 23800)</translation>
qt/locale/bitcoin_es.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_es.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_es.ts:        <translation>Pon tus monedas en participación &quot;Stake&quot; para dar soporte a la red y ganar alguna recompensa (por defecto: 1)</translation>
qt/locale/bitcoin_es.ts:        <translation>Umbral para la desconexión de pares con mal comportamiento (predeterminado: 100)</translation>
qt/locale/bitcoin_es.ts:        <translation>Número de segundos en que se evita la reconexión de pares con mal comportamiento (predeterminado: 86400)</translation>
qt/locale/bitcoin_es.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_es.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_es.ts:        <translation>Escuchar conexiones JSON-RPC en &lt;port&gt; (predeterminado: 13801 o testnet: 23801)</translation>
qt/locale/bitcoin_es.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_es.ts:        <translation>Importando el archivo de datos de la cadena de bloques.</translation>
qt/locale/bitcoin_es.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_es.ts:        <translation>Importando el archivo de datos de arranque de la cadena de bloques.</translation>
qt/locale/bitcoin_es.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_es.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_es.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_es.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_es.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_es.ts:        <translation>Importar bloques desde el archivo externo blk000?.dat</translation>
qt/locale/bitcoin_nl.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_nl.ts:        <translation>Exporteer Adresboek Data</translation>
qt/locale/bitcoin_nl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_nl.ts:        <translation>Fout bij exporteren</translation>
qt/locale/bitcoin_nl.ts:        <translation>Vul een nieuw wachtwoord in voor uw portemonnee. &lt;br/&gt; Gebruik een wachtwoord van &lt;b&gt;10 of meer verschillende karakters&lt;/b&gt;, of &lt;b&gt; acht of meer woorden&lt;/b&gt; . </translation>
qt/locale/bitcoin_nl.ts:        <translation>Versleutel portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Deze operatie vereist uw portemonneewachtwoord om de portemonnee te openen.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Open portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Deze operatie vereist uw portemonneewachtwoord om de portemonnee te ontsleutelen</translation>
qt/locale/bitcoin_nl.ts:        <translation>Ontsleutel portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Vul uw oude en nieuwe portemonneewachtwoord in.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Bevestig versleuteling van de portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Waarschuwing: Als je je portemonnee versleuteld en je verliest je wachtwoord zul je &lt;b&gt;AL JE MUNTEN VERLIEZEN&lt;/b&gt;!</translation>
qt/locale/bitcoin_nl.ts:        <translation>Weet u zeker dat u uw portemonnee wilt versleutelen?</translation>
qt/locale/bitcoin_nl.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_nl.ts:        <translation>BELANGRIJK: Elke eerder gemaakte backup van uw portemonneebestand dient u te vervangen door het nieuw gegenereerde, versleutelde portemonneebestand. Om veiligheidsredenen zullen eerdere backups van het niet-versleutelde portemonneebestand onbruikbaar worden zodra u uw nieuwe, versleutelde, portemonnee begint te gebruiken.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee versleuteld</translation>
qt/locale/bitcoin_nl.ts:        <translation>SUMCOIN zal nu sluiten om het versleutel proces te voltooien. Onthou dat het versleutelen van je portemonnee je niet volledig beschermt tegen diefstal van munten door malware op je computer.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonneeversleuteling mislukt</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonneeversleuteling mislukt door een interne fout. Uw portemonnee is niet versleuteld.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee openen mislukt</translation>
qt/locale/bitcoin_nl.ts:        <translation>Het opgegeven wachtwoord voor de portemonnee-ontsleuteling is niet correct.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee-ontsleuteling mislukt</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonneewachtwoord is met succes gewijzigd.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Toon algemeen overzicht van de portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>&amp;Versleutel Portemonnee...</translation>
qt/locale/bitcoin_nl.ts:        <translation>&amp;Backup Portemonnee...</translation>
qt/locale/bitcoin_nl.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_nl.ts:        <translation>&amp;Exporteren...</translation>
qt/locale/bitcoin_nl.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_nl.ts:        <translation>Exporteer de data in de huidige tab naar een bestand</translation>
qt/locale/bitcoin_nl.ts:        <translation>Versleutel of ontsleutel de portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Backup portemonnee naar een andere locatie</translation>
qt/locale/bitcoin_nl.ts:        <translation>Wijzig het wachtwoord voor uw portemonneversleuteling</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Open portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>&amp;Sluit portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Sluit portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Niet staking omdat portemonnee aan het beveiligd is</translation>
qt/locale/bitcoin_nl.ts:        <translation>Niet staking omdat portemonnee aan het offline is</translation>
qt/locale/bitcoin_nl.ts:        <translation>Niet staking omdat portemonnee aan het synchroniseren is.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Ontgrendel portemonnee...</translation>
qt/locale/bitcoin_nl.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee is &lt;b&gt;versleuteld&lt;/b&gt; en momenteel &lt;b&gt;geopend&lt;/b&gt;</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee is &lt;b&gt;versleuteld&lt;/b&gt; en momenteel &lt;b&gt;gesloten&lt;/b&gt;</translation>
qt/locale/bitcoin_nl.ts:        <translation>Backup Portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee bestanden (*.dat)</translation>
qt/locale/bitcoin_nl.ts:        <translation>Kon de portemonnee niet openen.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Los blok en adressenbestanden bij het afsluiten. Dit betekent dat ze naar een ander data-map worden verplaatst, maar het vertraagt ​​shutdown. De portemonnee is altijd vrijstaand.</translation>
qt/locale/bitcoin_nl.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_nl.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_nl.ts:        <translation>Portmapping via &amp;UPnP</translation>
qt/locale/bitcoin_nl.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_nl.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_nl.ts:        <translation>De weergegeven informatie kan verouderd zijn, Je portemonnee synchroniseerd automatisch met het SUMCOIN netwerk nadat er verbindig is gemaakt, maar dit proces is nog niet voltooid.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee</translation>
qt/locale/bitcoin_nl.ts:        <translation>Fout: De transactie was geweigerd, Dit kan gebeuren als sommige munten in je portemonnee al gebruikt zijn, door het gebruik van een kopie van wallet.dat en de munten in de kopie zijn niet gemarkeerd als gebruikt.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee-ontsleuteling is geannuleerd</translation>
qt/locale/bitcoin_nl.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_nl.ts:        <translation>Exporteer Transactie Data</translation>
qt/locale/bitcoin_nl.ts:        <source>Error exporting</source>
qt/locale/bitcoin_nl.ts:        <translation>Fout bij exporteren</translation>
qt/locale/bitcoin_nl.ts:        <translation>Specificeer het portemonnee bestand (vanuit de gegevensmap)</translation>
qt/locale/bitcoin_nl.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_nl.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_nl.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_nl.ts:        <translation>Stake je munten om netwerk te supporten en krijg hiervoor beloning (standaard: 1)</translation>
qt/locale/bitcoin_nl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_nl.ts:        <translation>Fout: De transactie was geweigerd, Dit kan gebeuren als sommige munten in je portemonnee al gebruikt zijn, door het gebruik van een kopie van wallet.dat en de munten in de kopie zijn niet gemarkeerd als gebruikt.</translation>
qt/locale/bitcoin_nl.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_nl.ts:        <translation>Fout: Portemonnee is op slot, niet mogelijk een transactie te creëren.</translation>
qt/locale/bitcoin_nl.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_nl.ts:        <translation>Importeren van blokketen data bestand.</translation>
qt/locale/bitcoin_nl.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_nl.ts:        <translation>Importeren van blokketen data bestand.</translation>
qt/locale/bitcoin_nl.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_nl.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_nl.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_nl.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_nl.ts:        <translation>Voer opdracht uit zodra een portemonneetransactie verandert (%s in cmd wordt vervangen door TxID)</translation>
qt/locale/bitcoin_nl.ts:        <translation>Vernieuw portemonnee naar nieuwste versie</translation>
qt/locale/bitcoin_nl.ts:        <translation>Doorzoek de blokketen op ontbrekende portemonnee-transacties</translation>
qt/locale/bitcoin_nl.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_nl.ts:        <translation>Importeer blokken van extern blk000?.dat bestand</translation>
qt/locale/bitcoin_nl.ts:        <translation>Fout: Portemonnee ontgrendeld voor alleen staking, niet in staat om de transactie te maken.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee %s bevindt zich buiten de datamap %s.</translation>
qt/locale/bitcoin_nl.ts:        <translation>Fout bij laden wallet.dat: Portemonnee corrupt</translation>
qt/locale/bitcoin_nl.ts:        <translation>Fout bij laden van wallet.dat: Portemonnee vereist een nieuwere versie van SUMCOIN</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee moet herschreven worden: herstart SUMCOIN om te voltooien</translation>
qt/locale/bitcoin_nl.ts:        <translation>Portemonnee aan het laden...</translation>
qt/locale/bitcoin_nl.ts:        <translation>Kan portemonnee niet downgraden</translation>
qt/locale/bitcoin_ko_KR.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ko_KR.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ko_KR.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ko_KR.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ko_KR.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ko_KR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ko_KR.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_fi.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_fi.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fi.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_fi.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_fi.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_fi.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_fi.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_fi.ts:        <translation>Avaa SUMCOIN-asiakkaalle automaattisesti portti reitittimestä. Tämä toimii vain, kun reitittimesi tukee UPnP:tä ja se on aktivoituna.</translation>
qt/locale/bitcoin_fi.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_fi.ts:        <translation>Portin uudelleenohjaus &amp;UPnP:llä</translation>
qt/locale/bitcoin_fi.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_fi.ts:        <translation>&amp;Portti</translation>
qt/locale/bitcoin_fi.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_fi.ts:        <translation>Proxyn Portti (esim. 9050)</translation>
qt/locale/bitcoin_fi.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_fi.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fi.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_fi.ts:        <translation>Kuuntele yhteyksiä portissa &lt;port&gt; (oletus: 13800 tai testiverkko: 23800)</translation>
qt/locale/bitcoin_fi.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_fi.ts:        <translation>Liitä annettuun osoitteeseen. Käytä [host]:port merkintää IPv6:lle</translation>
qt/locale/bitcoin_fi.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_fi.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_fi.ts:        <translation>Virhe valmisteltaessa RPC-portin %u avaamista kuunneltavaksi: %s</translation>
qt/locale/bitcoin_fi.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_fi.ts:        <translation>Kuuntele JSON-RPC-yhteyksiä portissa &lt;port&gt; (oletus: 13801 tai testiverkko: 23801)</translation>
qt/locale/bitcoin_fi.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_fi.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_fi.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_fi.ts:        <translation>Virhe ilmennyt asetettaessa RPC-porttia %u IPv6:n kuuntelemiseksi, palataan takaisin IPv4:ään %s</translation>
qt/locale/bitcoin_fi.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_fi.ts:        <translation>Ei onnistuttu kuuntelemaan missään portissa. Käytä -listen=0 jos haluat tätä.</translation>
qt/locale/bitcoin_fi.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_fi.ts:        <translation>Käytä UPnP:tä kuunneltavan portin avaamiseen (vakioasetus: 0)</translation>
qt/locale/bitcoin_fi.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_fi.ts:        <translation>Käytä UPnP:tä kuunneltavan portin avaamiseen (vakioasetus: 1 kun kuuntelemassa)</translation>
qt/locale/bitcoin_fi.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_es_CL.ts:        <translation>Copia la dirección seleccionada al portapapeles</translation>
qt/locale/bitcoin_es_CL.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_es_CL.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_CL.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_es_CL.ts:        <translation>IMPORTANTE: Cualquier versión anterior que hayas realizado de tu archivo de billetera será reemplazada por el nuevo archivo de billetera encriptado. Por razones de seguridad, los respaldos anteriores de los archivos de billetera se volverán inútiles en tanto comiences a usar la nueva billetera encriptada.</translation>
qt/locale/bitcoin_es_CL.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_es_CL.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_es_CL.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_es_CL.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_es_CL.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_es_CL.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_es_CL.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_es_CL.ts:        <translation>Pega dirección desde portapapeles</translation>
qt/locale/bitcoin_es_CL.ts:        <translation>Pega dirección desde portapapeles</translation>
qt/locale/bitcoin_es_CL.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_es_CL.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_CL.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_es_CL.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_es_CL.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_es_CL.ts:        <translation>Umbral de desconección de clientes con mal comportamiento (por defecto: 100)</translation>
qt/locale/bitcoin_es_CL.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_es_CL.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_es_CL.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_es_CL.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_es_CL.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_es_CL.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_es_CL.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_es_CL.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_es_CL.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ja.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ja.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ja.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ja.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ja.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ja.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ja.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ja.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ja.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ja.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ja.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ja.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ja.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ja.ts:        <translation>&lt;port&gt; で 接続をリスン (デフォルト: 13800かtestnet は 23800)</translation>
qt/locale/bitcoin_ja.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ja.ts:        <translation>アドレスに結ぶ。IPv6のばい、[host]:port 表記法を使ってください。</translation>
qt/locale/bitcoin_ja.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ja.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ja.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ja.ts:        <translation>&lt;port&gt; で JSON-RPC 接続をリスン (デフォルト: 13801かtestnet は 23801)</translation>
qt/locale/bitcoin_ja.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ja.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ja.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ja.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ja.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ja.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ja.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_et.qm matches
qt/locale/bitcoin_bg.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_bg.ts:        <source>Error exporting</source>
qt/locale/bitcoin_bg.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_bg.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_bg.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_bg.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_bg.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_bg.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_bg.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_bg.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_bg.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_bg.ts:        <source>Error exporting</source>
qt/locale/bitcoin_bg.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_bg.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_bg.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_bg.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_bg.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_bg.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_bg.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_bg.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_bg.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_bg.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_bg.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_bg.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_en.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_en.ts:        <translation>Export Address Book Data</translation>
qt/locale/bitcoin_en.ts:        <source>Error exporting</source>
qt/locale/bitcoin_en.ts:        <translation>Error exporting</translation>
qt/locale/bitcoin_en.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_en.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_en.ts:        <translation>&amp;Export...</translation>
qt/locale/bitcoin_en.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_en.ts:        <translation>Export the data in the current tab to a file</translation>
qt/locale/bitcoin_en.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_en.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_en.ts:        <translation>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</translation>
qt/locale/bitcoin_en.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_en.ts:        <translation>Map port using &amp;UPnP</translation>
qt/locale/bitcoin_en.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_en.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_en.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_en.ts:        <translation>Port of the proxy (e.g. 9050)</translation>
qt/locale/bitcoin_en.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_en.ts:        <translation>Export Transaction Data</translation>
qt/locale/bitcoin_en.ts:        <source>Error exporting</source>
qt/locale/bitcoin_en.ts:        <translation>Error exporting</translation>
qt/locale/bitcoin_en.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_en.ts:        <translation>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</translation>
qt/locale/bitcoin_en.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_en.ts:        <translation>Bind to given address. Use [host]:port notation for IPv6</translation>
qt/locale/bitcoin_en.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_en.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_en.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_en.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_en.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_en.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_en.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_en.ts:        <translation>Failed to listen on any port. Use -listen=0 if you want this.</translation>
qt/locale/bitcoin_en.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_en.ts:        <translation>Use UPnP to map the listening port (default: 0)</translation>
qt/locale/bitcoin_en.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_en.ts:        <translation>Use UPnP to map the listening port (default: 1 when listening)</translation>
qt/locale/bitcoin_en.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_en.ts:        <translation>Imports blocks from external blk000?.dat file</translation>
qt/locale/bitcoin_vi.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_vi.ts:        <source>Error exporting</source>
qt/locale/bitcoin_vi.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_vi.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_vi.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_vi.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_vi.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_vi.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_vi.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_vi.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_vi.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_vi.ts:        <source>Error exporting</source>
qt/locale/bitcoin_vi.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_vi.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_vi.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_vi.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_vi.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_vi.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_vi.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_vi.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_vi.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_vi.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_vi.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_vi.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_cs.qm matches
Binary file qt/locale/bitcoin_ja.qm matches
Binary file qt/locale/bitcoin_sk.qm matches
qt/locale/bitcoin_tr.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_tr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_tr.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_tr.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_tr.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_tr.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_tr.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_tr.ts:        <translation>Yönelticide SUMCOIN istemci portunu otomatik olarak aç. Bu, sadece yönelticiniz UPnP&apos;i desteklediğinde ve etkin olduğunda çalışır.</translation>
qt/locale/bitcoin_tr.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_tr.ts:        <translation>Portları &amp;UPnP kullanarak haritala</translation>
qt/locale/bitcoin_tr.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_tr.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_tr.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_tr.ts:        <translation>Vekil sunucunun portu (mesela 9050)</translation>
qt/locale/bitcoin_tr.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_tr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_tr.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_tr.ts:        <translation>&lt;port&gt; üzerinde bağlantıları dinle (varsayılan: 13800 veya testnet: 23800)</translation>
qt/locale/bitcoin_tr.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_tr.ts:        <translation>Belirtilen adrese bağlı. IPv6 için [host]:port notasyonunu kullan</translation>
qt/locale/bitcoin_tr.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_tr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_tr.ts:        <translation>IPv4 üzerinde dinlemek için %u numaralı RPC portunun kurulumu sırasında hata meydana geldi: %s</translation>
qt/locale/bitcoin_tr.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_tr.ts:        <translation>&lt;port&gt; üzerinde JSON-RPC bağlantılarını dinle (varsayılan: 13801 veya testnet: 23801)</translation>
qt/locale/bitcoin_tr.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_tr.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_tr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_tr.ts:        <translation>IPv6 üzerinde dinlemek için %u numaralı RPC portu kurulurken bir hata meydana geldi, IPv4&apos;e dönülüyor: %s</translation>
qt/locale/bitcoin_tr.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_tr.ts:        <translation>Herhangi bir portun dinlenmesi başarısız oldu. Bunu istiyorsanız -listen=0 seçeneğini kullanınız.</translation>
qt/locale/bitcoin_tr.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_tr.ts:        <translation>Dinlenecek portu haritalamak için UPnP kullan (varsayılan: 0)</translation>
qt/locale/bitcoin_tr.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_tr.ts:        <translation>Dinlenecek portu haritalamak için UPnP kullan (varsayılan: dinlenildiğinde 1)</translation>
qt/locale/bitcoin_tr.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_fr.qm matches
Binary file qt/locale/bitcoin_pt_PT.qm matches
Binary file qt/locale/bitcoin_ar.qm matches
qt/locale/bitcoin_sk.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_sk.ts:        <translation>Exportovať dáta z adresára</translation>
qt/locale/bitcoin_sk.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sk.ts:        <translation>Chyba pri exporte</translation>
qt/locale/bitcoin_sk.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_sk.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_sk.ts:        <translation>&amp;Export...</translation>
qt/locale/bitcoin_sk.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_sk.ts:        <translation>Exportovať dáta v aktuálnej karte do súboru</translation>
qt/locale/bitcoin_sk.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_sk.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_sk.ts:        <translation>Automaticky otvoriť port klienta SUMCOIN na routeri. To funguje iba vtedy, ak váš router podporuje UPnP a je povolené.</translation>
qt/locale/bitcoin_sk.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_sk.ts:        <translation>Mapovať port pomocou &amp;UPnP</translation>
qt/locale/bitcoin_sk.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_sk.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_sk.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_sk.ts:        <translation>Port proxy (napr. 9050)</translation>
qt/locale/bitcoin_sk.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_sk.ts:        <translation>Export transakčných údajov</translation>
qt/locale/bitcoin_sk.ts:        <source>Error exporting</source>
qt/locale/bitcoin_sk.ts:        <translation>Chyba pri exporte</translation>
qt/locale/bitcoin_sk.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_sk.ts:        <translation>Počúvať pripojenia na &lt;port&gt; (predvolené: 13800 alebo testovacia sieť: 23800)</translation>
qt/locale/bitcoin_sk.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_sk.ts:        <translation>Spojiť do danej adresy. Použite [host]:port zápis pre IPv6</translation>
qt/locale/bitcoin_sk.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_sk.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_sk.ts:        <translation>Pri nastavovaní portu RPC %u pre počúvanie na IPv4 došlo k chybe: %s</translation>
qt/locale/bitcoin_sk.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_sk.ts:        <translation>Počúvajte pre JSON-RPC spojenie na &lt;port&gt; (predvolené: 13801 alebo testovaciasieť: 23801)</translation>
qt/locale/bitcoin_sk.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_sk.ts:        <translation>Importovanie dátového súboru reťazca blokov.</translation>
qt/locale/bitcoin_sk.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_sk.ts:        <translation>Import zavádzacej časti blockchain dátového súbora.</translation>
qt/locale/bitcoin_sk.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_sk.ts:        <translation>Pri nastavovaní portu RPC %u pre počúvanie na IPv6, spadne späť do IPv4 došlo k chybe: %s</translation>
qt/locale/bitcoin_sk.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_sk.ts:        <translation>Nepodarilo sa počúvať žiadnom porte. Použite -listen=0 ak to chcete.</translation>
qt/locale/bitcoin_sk.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_sk.ts:        <translation>Skúsiť použiť UPnP pre mapovanie počúvajúceho portu (default: 0)</translation>
qt/locale/bitcoin_sk.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_sk.ts:        <translation>Skúsiť použiť UPnP pre mapovanie počúvajúceho portu (default: 1 when listening)</translation>
qt/locale/bitcoin_sk.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_sk.ts:        <translation>Importovať bloky z externého blk000?.dat súbora</translation>
qt/locale/bitcoin_fa.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_fa.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fa.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_fa.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_fa.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_fa.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_fa.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_fa.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_fa.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_fa.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_fa.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_fa.ts:        <source>Error exporting</source>
qt/locale/bitcoin_fa.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_fa.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_fa.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_fa.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_fa.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_fa.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_fa.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_fa.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_fa.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_fa.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_fa.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_fa.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_pl.qm matches
qt/locale/bitcoin_hr.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_hr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hr.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_hr.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_hr.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_hr.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_hr.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_hr.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_hr.ts:        <translation>Mapiraj port koristeći &amp;UPnP</translation>
qt/locale/bitcoin_hr.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_hr.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_hr.ts:        <translation>Port od proxy-a (npr. 9050)</translation>
qt/locale/bitcoin_hr.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_hr.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hr.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_hr.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_hr.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_hr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_hr.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_hr.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_hr.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_hr.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_hr.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_hr.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_hr.ts:        <translation>Pokušaj koristiti UPnP da otvoriš port za uslugu (default: 0)</translation>
qt/locale/bitcoin_hr.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_hr.ts:        <translation>Pokušaj koristiti UPnP da otvoriš port za uslugu (default: 1 when listening)</translation>
qt/locale/bitcoin_hr.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_uk.qm matches
Binary file qt/locale/bitcoin_es.qm matches
qt/locale/bitcoin_es_DO.ts:        <translation>Copiar la dirección seleccionada al portapapeles del sistema</translation>
qt/locale/bitcoin_es_DO.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_es_DO.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_DO.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_es_DO.ts:        <translation>IMPORTANTE: Cualquier copia de seguridad que haya realizado previamente de su archivo de monedero debe reemplazarse con el nuevo archivo de monedero cifrado. Por razones de seguridad, las copias de seguridad previas del archivo de monedero no cifradas serán inservibles en cuanto comience a usar el nuevo monedero cifrado.</translation>
qt/locale/bitcoin_es_DO.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_es_DO.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_es_DO.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_es_DO.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_es_DO.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_es_DO.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_es_DO.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_es_DO.ts:        <translation>Pegar dirección desde portapapeles</translation>
qt/locale/bitcoin_es_DO.ts:        <translation>Pegar dirección desde portapapeles</translation>
qt/locale/bitcoin_es_DO.ts:        <translation>Copiar la firma actual al portapapeles del sistema</translation>
qt/locale/bitcoin_es_DO.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_es_DO.ts:        <source>Error exporting</source>
qt/locale/bitcoin_es_DO.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_es_DO.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_es_DO.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_es_DO.ts:        <translation>Umbral para la desconexión de pares con mal comportamiento (predeterminado: 100)</translation>
qt/locale/bitcoin_es_DO.ts:        <translation>Número de segundos en que se evita la reconexión de pares con mal comportamiento (predeterminado: 86400)</translation>
qt/locale/bitcoin_es_DO.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_es_DO.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_es_DO.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_es_DO.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_es_DO.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_es_DO.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_es_DO.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_es_DO.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_es_DO.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Copiar l&apos;adreça seleccionada al porta-retalls del sistema</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Exportar dades de la llibreta d&apos;adreces </translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Error a l&apos;exportar</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>IMPORTANT: Tota copia de seguretat que hagis realitzat hauria de ser reemplaçada pel, recentment generat, arxiu encriptat del moneder.</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>&amp;Exportar...</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Exportar les dades de la pestanya actual a un arxiu</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ca_ES.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Obrir automàticament el port de client SUMCOIN en el router. Això només funciona quan el router és compatible amb UPnP i està habilitat.</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Obrir ports amb &amp;UPnP</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Port del proxy (per exemple 9050)</translation>
qt/locale/bitcoin_ca_ES.ts:        <translation>Import superi el saldo de la seva compte.</translation>
qt/locale/bitcoin_ca_ES.ts:        <translation>Enganxar adreça del porta-retalls</translation>
qt/locale/bitcoin_ca_ES.ts:        <translation>Enganxar adreça del porta-retalls</translation>
qt/locale/bitcoin_ca_ES.ts:        <translation>Copiar la signatura actual al porta-retalls del sistema</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Exportació de dades de transaccions</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Error a l&apos;exportar</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Escoltar connexions en &lt;port&gt; (per defecte: 13800 o testnet: 23800)</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Enllaçar a l&apos;adreça donada. Utilitzeu la notació [host]:port per a IPv6</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Posa les teves monedes a fer &quot;stake&quot; per donar suport a la xarxa i obtenir una recompensa (per defecte: 1)</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Ha sorgit un error al configurar el port RPC %u escoltant a IPv4: %s</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Escoltar connexions JSON-RPC al port &lt;port&gt; (per defecte: 13801 o testnet: 23801)</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Important fitxer de dades de la cadena de blocs</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Important fitxer de dades d&apos;arrencada de la cadena de blocs</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Ha sorgit un error al configurar el port RPC %u escoltant a IPv6, retrocedint a IPv4: %s</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Error al escoltar a qualsevol port. Utilitza -listen=0 si vols això.</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Utilitza UPnP per a mapejar els ports d&apos;escolta (per defecte: 0)</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Utilitza UPnP per a mapejar els ports d&apos;escolta (per defecte: 1 quan s&apos;escolta)</translation>
qt/locale/bitcoin_ca_ES.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ca_ES.ts:        <translation>Importar blocs desde l&apos;arxiu extern blk000?.dat</translation>
qt/locale/bitcoin_ru.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ru.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ru.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ru.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ru.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ru.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ru.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ru.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ru.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ru.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ru.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ru.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ru.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ru.ts:        <translation>Принимать входящие подключения на &lt;port&gt; (по умолчанию: 13800 или 23800 в тестовой сети)</translation>
qt/locale/bitcoin_ru.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ru.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ru.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ru.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ru.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ru.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ru.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ru.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ru.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ru.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ru.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Exportar Dados do Livro de Endereços</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Erro ao exportar</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>IMPORTANTE: Qualquer backup prévio que você tenha feito do seu arquivo wallet deve ser substituído pelo novo e encriptado arquivo wallet gerado. Por razões de segurança, qualquer backup do arquivo wallet não criptografado se tornará inútil assim que você começar  a usar uma nova carteira criptografada.</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>&amp;Exportar...</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Exportar os dados da guia atual para um arquivo</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Mapear porta usando &amp;UPnP</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>&amp;Porta:</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Porta do serviço de proxy (ex. 9050)</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Error exporting</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Limite para desconectar peers mal comportados (padrão: 100)</translation>
qt/locale/bitcoin_pt_BR.ts:        <translation>Número de segundos para impedir que peers mal comportados reconectem (padrão: 86400)</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Um erro ocorreu ao configurar a porta RPC %u para escuta em IPv4: %s</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_pt_BR.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_pt_BR.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Um erro ocorreu ao configurar a porta RPC %u para escuta em IPv6, voltando ao IPv4: %s</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Falha ao escutar em qualquer porta. Use -listen=0 se você quiser isso.</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Usar UPnP para mapear porta de escuta (padrão: 0)</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_pt_BR.ts:        <translation>Usar UPnP para mapear porta de escuta (padrão: 1 quando estiver escutando)</translation>
qt/locale/bitcoin_pt_BR.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_da.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_da.ts:        <translation>Eksporter Adresse Bog</translation>
qt/locale/bitcoin_da.ts:        <source>Error exporting</source>
qt/locale/bitcoin_da.ts:        <translation>Fejl ved eksportering</translation>
qt/locale/bitcoin_da.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_da.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_da.ts:        <translation>&amp;Eksporter...</translation>
qt/locale/bitcoin_da.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_da.ts:        <translation>Eksportere data i den aktuelle fane til en fil</translation>
qt/locale/bitcoin_da.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_da.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_da.ts:        <translation>Automatisk åbne SUMCOIN klient-port på routeren. Dette virker kun, når din router understøtter UPnP og er det er aktiveret.</translation>
qt/locale/bitcoin_da.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_da.ts:        <translation>Konfigurer port vha. UPnP</translation>
qt/locale/bitcoin_da.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_da.ts:        <translation>Port:</translation>
qt/locale/bitcoin_da.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_da.ts:        <translation>Porten på proxyen (f.eks. 9050)</translation>
qt/locale/bitcoin_da.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_da.ts:        <translation>Exportere transaktionsdata</translation>
qt/locale/bitcoin_da.ts:        <source>Error exporting</source>
qt/locale/bitcoin_da.ts:        <translation>Fejl exporting</translation>
qt/locale/bitcoin_da.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_da.ts:        <translation>Lyt efter forbindelser på &lt;port&gt; (default: 13800 eller Testnet: 23800)</translation>
qt/locale/bitcoin_da.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_da.ts:        <translation>Binder til en given adresse. Brug [host]: port notation for IPv6</translation>
qt/locale/bitcoin_da.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_da.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_da.ts:        <translation>Der opstod en fejl ved angivelse af RPC-porten %u til at lytte på IPv4: %s</translation>
qt/locale/bitcoin_da.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_da.ts:        <translation>Spor efter JSON-RPC-forbindelser på &lt;port&gt; (default: 13801 eller Testnet: 23801)</translation>
qt/locale/bitcoin_da.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_da.ts:        <translation>Importerer blockchain datafil.</translation>
qt/locale/bitcoin_da.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_da.ts:        <translation>Import af bootstrap blockchain datafil.</translation>
qt/locale/bitcoin_da.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_da.ts:        <translation>Der opstod en fejl ved angivelse af RPC-porten %u til at lytte på IPv6, falder tilbage til IPv4: %s</translation>
qt/locale/bitcoin_da.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_da.ts:        <translation>Lytning på enhver port mislykkedes. Brug -listen=0, hvis du ønsker dette.</translation>
qt/locale/bitcoin_da.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_da.ts:        <translation>Forsøg at bruge UPnP til at konfigurere den lyttende port (standard: 0)</translation>
qt/locale/bitcoin_da.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_da.ts:        <translation>Forsøg at bruge UPnP til at konfigurere den lyttende port (standard: 1 når lytter)</translation>
qt/locale/bitcoin_da.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_da.ts:        <translation>Importere blokke fra ekstern blk000?. Dat fil</translation>
Binary file qt/locale/bitcoin_sv.qm matches
Binary file qt/locale/bitcoin_tr.qm matches
Binary file qt/locale/bitcoin_gl.qm matches
Binary file qt/locale/bitcoin_la.qm matches
Binary file qt/locale/bitcoin_ko_KR.qm matches
qt/locale/bitcoin_ro_RO.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Exportă datele din Agendă</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare la exportare</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Introdu noua parolă a portofelului electronic.&lt;br/&gt;Te rog folosește &lt;b&gt;minim 10 caractere aleatoare&lt;/b&gt;, sau &lt;b&gt;minim 8 cuvinte&lt;/b&gt;.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Criptează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Această acțiune necesită fraza ta de acces pentru deblocarea portofelului.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Deblochează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Această acțiune necesită fraza ta de acces pentru decriptarea portofelului.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Decriptează portofelul.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Introdu vechea și noua parolă pentru portofel.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Confirmă criptarea portofelului</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Atentie: Daca encriptezi portofelul si iti uiti parola, &lt;b&gt;VEI PIERDE TOATA MONEDELE&lt;/b&gt;!</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Sunteţi sigur că doriţi să criptaţi portofelul electronic?</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>IMPORTANT: Orice copie de siguranta facuta in prealabil portofelului dumneavoastra ar trebui inlocuita cu cea generata cel mai recent fisier criptat al portofelului. Pentru siguranta, copiile de siguranta vechi ale portofelului ne-criptat vor deveni inutile de indata ce veti incepe folosirea noului fisier criptat al portofelului.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofel criptat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>SUMCOIN se va inchide pentru a termina procesul de encriptie. Amintiți-vă, criptarea portofelul dumneavoastră nu poate proteja pe deplin monedele dvs. de a fi furate de  infectarea cu malware a computerului.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Criptarea portofelului a eșuat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Criptarea portofelului a eșuat din cauza unei erori interne. Portofelul tău nu a fost criptat.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Deblocarea portofelului a eșuat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Fraza de acces introdusă pentru decriptarea portofelului a fost incorectă.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Decriptarea portofelului a eșuat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Parola portofelului electronic a fost schimbată.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Arată o stare generală de ansamblu a portofelului</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Criptează portofelul electronic...</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>&amp;Fă o copie de siguranță a  portofelului...</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>&amp;Exportă</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Exportă datele din tab-ul curent într-un fișier</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Criptează sau decriptează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Creează o copie de rezervă a portofelului într-o locație diferită</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Schimbă fraza de acces folosită pentru criptarea portofelului</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Deblochează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Blochează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Blochează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Nu este in modul stake deoarece portofelul este blocat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Nu este in modul stake deoarece portofelul este offline</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Nu este in modul stake deoarece portofelul se sincronizeaza</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>&amp;Deblochează portofelul</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofelul este &lt;b&gt;criptat&lt;/b&gt; iar în momentul de față este &lt;b&gt;deblocat&lt;/b&gt;</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofelul este &lt;b&gt;criptat&lt;/b&gt; iar în momentul de față este &lt;b&gt;blocat&lt;/b&gt;</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Fă o copie de siguranță a portofelului</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Date portofel(*.dat)</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare la încercarea de a salva datele portofelului în noua locaţie.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofelul nu a putut fi deblocat.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Detașați bloc și baze de date de adrese la închidere. Acest lucru înseamnă că pot fi mutate într-u  alt director de date, dar incetineste închiderea. Portofelul este întotdeauna detașat.</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Deschide automat portul pentru cientul SUMCOIN pe router. Aces lucru este posibil doara daca routerul suporta UPnP si este activat</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Mapeaza portul folosind &amp;UPnP</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portul pe care se concetează proxy serverul (de exemplu: 9050)</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Informatia afisata poate fi depasita.  Portofel se sincronizează automat cu rețeaua SUMCOIN după ce se stabilește o conexiune, dar acest proces nu s-a finalizat încă.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofel</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare: tranzacția a fost respinsă. Acest lucru s-ar putea întâmpla în cazul în care unele dintre monedele din portofel au fost deja cheltuite, cum si cum ați utilizat o copie a wallet.dat și monedele au fost cheltuite în copie dar nu au fost marcate ca și cheltuite aici.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Blocarea portofelului a fost intrerupta</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Exporta datele trazactiei</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare la exportare</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Ascultă pentru conectări pe &lt;port&gt; (implicit:  13800 sau testnet: 23800) </translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Leaga la o adresa data. Utilizeaza notatie [host]:port pt IPv6</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ro_RO.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>A intervenit o eroare in timp ce se seta portul RPC %u pentru ascultare pe IPv4: %s</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare: tranzacția a fost respinsă. Acest lucru s-ar putea întâmpla în cazul în care unele dintre monedele din portofel au fost deja cheltuite, cum si cum ați utilizat o copie a wallet.dat și monedele au fost cheltuite în copie dar nu au fost marcate ca și cheltuite aici.</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Ascultă pentru conexiuni JSON-RPC pe &lt;port&gt; (implicit:13801 sau testnet: 23801)</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare: portofel blocat, tranzactia nu s-a creat</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Se importa fisierul blockchain</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Se importa fisierul bootstrap blockchain</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>A intervenit o eroare in timp ce se seta portul RPC %u pentru ascultare pe IPv6, reintoarcere la IPv4: %s</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Am esuat ascultarea pe orice port. Folositi -listen=0 daca vreti asta.</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Foloseste UPnP pentru a vedea porturile (initial: 0)</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Foloseste UPnP pentru a vedea porturile (initial: 1 cand listezi)</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Executati comanda cand o tranzactie a portofelului se schimba (%s in cmd este inlocuit de TxID)</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Actualizează portofelul la ultimul format</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Rescanează lanțul de bloc pentru tranzacțiile portofel lipsă</translation>
qt/locale/bitcoin_ro_RO.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ro_RO.ts:        <translation>Importă blocuri dintr-un fișier extern blk000?.dat</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare: portofel blocat doar pentru staking, tranzactia nu s-a creat.</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Portofelul %s este in afara directorului %s</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare la încărcarea wallet.dat: Portofel corupt</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Eroare la încărcarea wallet.dat: Portofelul necesita o versiune mai noua de SUMCOIN</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>A fost nevoie de rescrierea portofelului: restartați SUMCOIN pentru a finaliza</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Încarc portofel...</translation>
qt/locale/bitcoin_ro_RO.ts:        <translation>Nu se poate retrograda portofelul</translation>
Binary file qt/locale/bitcoin_sl_SI.qm matches
Binary file qt/locale/bitcoin_fr_CA.qm matches
qt/locale/bitcoin_zh_CN.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_zh_CN.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_zh_CN.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_zh_CN.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_zh_CN.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_zh_CN.ts:        <translation>监听&lt;port&gt;端口的连接 (默认: 13800 测试网: 23800)</translation>
qt/locale/bitcoin_zh_CN.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_zh_CN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_zh_CN.ts:        <translation>监听 &lt;port&gt; 端口的JSON-RPC连接 (默认: 13801 测试网: 23801)</translation>
qt/locale/bitcoin_zh_CN.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_zh_CN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_zh_CN.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_eo.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_eo.ts:        <source>Error exporting</source>
qt/locale/bitcoin_eo.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_eo.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_eo.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_eo.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_eo.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_eo.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_eo.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_eo.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_eo.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_eo.ts:        <source>Error exporting</source>
qt/locale/bitcoin_eo.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_eo.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_eo.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_eo.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_eo.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_eo.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_eo.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_eo.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_eo.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_eo.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_eo.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_eo.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_ro_RO.qm matches
qt/locale/bitcoin_id_ID.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_id_ID.ts:        <source>Error exporting</source>
qt/locale/bitcoin_id_ID.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_id_ID.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_id_ID.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_id_ID.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_id_ID.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_id_ID.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_id_ID.ts:        <translation>Petakan port dengan &amp;UPnP</translation>
qt/locale/bitcoin_id_ID.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_id_ID.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_id_ID.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_id_ID.ts:        <translation>Port proxy (cth. 9050)</translation>
qt/locale/bitcoin_id_ID.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_id_ID.ts:        <source>Error exporting</source>
qt/locale/bitcoin_id_ID.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_id_ID.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_id_ID.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_id_ID.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_id_ID.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_id_ID.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_id_ID.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_id_ID.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_id_ID.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_id_ID.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_id_ID.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_id_ID.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hi_IN.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_hi_IN.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_hi_IN.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_hi_IN.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Error exporting</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_hi_IN.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_hi_IN.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_es_DO.qm matches
qt/locale/bitcoin_ar.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ar.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ar.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ar.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ar.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ar.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ar.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ar.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ar.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ar.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ar.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ar.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ar.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ar.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ar.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ar.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ar.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ar.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ar.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ar.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ar.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ar.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ar.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ar.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_ca.ts:        <translation>Copia la selecció actual al porta-retalls del sistema</translation>
qt/locale/bitcoin_ca.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_ca.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_ca.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_ca.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_ca.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_ca.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_ca.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_ca.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_ca.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_ca.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_ca.ts:        <source>Error exporting</source>
qt/locale/bitcoin_ca.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_ca.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_ca.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_ca.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_ca.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_ca.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_ca.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_ca.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_ca.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_ca.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_ca.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_ca.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_hu.qm matches
Binary file qt/locale/bitcoin_hr.qm matches
qt/locale/bitcoin_et.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_et.ts:        <source>Error exporting</source>
qt/locale/bitcoin_et.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_et.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_et.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_et.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_et.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_et.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_et.ts:        <translation>Suuna port &amp;UPnP kaudu</translation>
qt/locale/bitcoin_et.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_et.ts:        <translation>&amp;Port:</translation>
qt/locale/bitcoin_et.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_et.ts:        <translation>Proxi port (nt 9050)</translation>
qt/locale/bitcoin_et.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_et.ts:        <source>Error exporting</source>
qt/locale/bitcoin_et.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_et.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_et.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_et.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_et.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_et.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_et.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_et.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_et.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_et.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_et.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_et.ts:        <source>Imports blocks from external blk000?.dat file</source>
qt/locale/bitcoin_he.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_he.ts:        <source>Error exporting</source>
qt/locale/bitcoin_he.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_he.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_he.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_he.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_he.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_he.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_he.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_he.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_he.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_he.ts:        <source>Error exporting</source>
qt/locale/bitcoin_he.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_he.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_he.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_he.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_he.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_he.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_he.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_he.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_he.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_he.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_he.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_he.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_da.qm matches
Binary file qt/locale/bitcoin_en.qm matches
qt/locale/bitcoin_la.ts:        <source>Export Address Book Data</source>
qt/locale/bitcoin_la.ts:        <source>Error exporting</source>
qt/locale/bitcoin_la.ts:        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
qt/locale/bitcoin_la.ts:        <translation>GRAVE: Oportet ulla prioria conservata quae fecisti de plica tui cassidilis reponi a nove generata cifrata plica cassidilis.  Propter securitatem, prioria conservata de plica non cifrata cassidilis inutilia fiet simul atque incipis uti novo cifrato cassidili.</translation>
qt/locale/bitcoin_la.ts:        <source>&amp;Export...</source>
qt/locale/bitcoin_la.ts:        <source>Export the data in the current tab to a file</source>
qt/locale/bitcoin_la.ts:        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>
qt/locale/bitcoin_la.ts:        <source>Automatically open the SUMCOIN client port on the router. This only works when your router supports UPnP and it is enabled.</source>
qt/locale/bitcoin_la.ts:        <source>Map port using &amp;UPnP</source>
qt/locale/bitcoin_la.ts:        <translation>Designa portam utendo &amp;UPnP</translation>
qt/locale/bitcoin_la.ts:        <source>&amp;Port:</source>
qt/locale/bitcoin_la.ts:        <translation>&amp;Porta:</translation>
qt/locale/bitcoin_la.ts:        <source>Port of the proxy (e.g. 9050)</source>
qt/locale/bitcoin_la.ts:        <translation>Porta vicarii (e.g. 9050)</translation>
qt/locale/bitcoin_la.ts:        <translation>Oportet quantitatem ad pensandum maiorem quam 0 esse.</translation>
qt/locale/bitcoin_la.ts:        <source>Export Transaction Data</source>
qt/locale/bitcoin_la.ts:        <source>Error exporting</source>
qt/locale/bitcoin_la.ts:        <source>Listen for connections on &lt;port&gt; (default: 13800 or testnet: 23800)</source>
qt/locale/bitcoin_la.ts:        <source>Bind to given address. Use [host]:port notation for IPv6</source>
qt/locale/bitcoin_la.ts:        <source>Stake your coins to support network and gain reward (default: 1)</source>
qt/locale/bitcoin_la.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
qt/locale/bitcoin_la.ts:        <translation>Error erat dum initians portam RPC %u pro auscultando in IPv4: %s</translation>
qt/locale/bitcoin_la.ts:        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 13801 or testnet: 23801)</source>
qt/locale/bitcoin_la.ts:        <source>Importing blockchain data file.</source>
qt/locale/bitcoin_la.ts:        <source>Importing bootstrap blockchain data file.</source>
qt/locale/bitcoin_la.ts:        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
qt/locale/bitcoin_la.ts:        <translation>Error erat dum initians portam RPC %u pro auscultando in IPv6, labens retrorsum ad IPv4: %s</translation>
qt/locale/bitcoin_la.ts:        <translation>Monitio: wallet.data corrupta, data salvata!  Originalis wallet.dat salvata ut wallet.{timestamp}.bak in %s; si pendendum tuum vel transactiones pravae sunt, oportet ab conservato restituere.</translation>
qt/locale/bitcoin_la.ts:        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
qt/locale/bitcoin_la.ts:        <translation>Non potuisse auscultare in ulla porta.  Utere -listen=0 si hoc vis.</translation>
qt/locale/bitcoin_la.ts:        <source>Use UPnP to map the listening port (default: 0)</source>
qt/locale/bitcoin_la.ts:        <translation>Utere UPnP designare portam auscultandi (praedefinitum: 0)</translation>
qt/locale/bitcoin_la.ts:        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
qt/locale/bitcoin_la.ts:        <translation>Utere UPnP designare portam auscultandi (praedefinitum: 1 quando auscultans)</translation>
qt/locale/bitcoin_la.ts:        <source>Imports blocks from external blk000?.dat file</source>
Binary file qt/locale/bitcoin_id_ID.qm matches
qt/guiconstants.h:/* QRCodeDialog -- size of exported QR Code image */
qt/guiconstants.h:#define EXPORT_IMAGE_SIZE 256
script.h:    //explicit CScript(char b) is not portable.  Use 'signed char' or 'unsigned char'.
script.h:    //CScript& operator<<(char b) is not portable.  Use 'signed char' or 'unsigned char'.
net.h:void MapPort();
net.h:unsigned short GetListenPort();
net.h:bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::string()));
net.h:    LOCAL_UPNP,   // address reported by UPnP
net.h:    LOCAL_IRC,    // address reported by IRC (deprecated)
net.h:    LOCAL_HTTP,   // address reported by whatismyip.com and similar
net.h:        addrName = addrNameIn == "" ? addr.ToStringIPPort() : addrNameIn;
net.h:    // IMPORTANT:  There should be nothing I can give a
wallet.h:    FEATURE_BASE = 10500, // the earliest version new wallets supports (only useful for getinfo's clientversion output)
wallet.h:    // check whether we are allowed to upgrade (or already support) to the named feature
wallet.h:    bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }
wallet.h:    void AddSupportingTransactions(CTxDB& txdb);
